{"version":3,"file":"static/chunks/439a1ad3.6eb2e8109527e7f6.js","mappings":"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","sources":["webpack://_N_E/xterm/webpack/universalModuleDefinition","webpack://_N_E/xterm/./src/browser/AccessibilityManager.ts","webpack://_N_E/xterm/./src/browser/Clipboard.ts","webpack://_N_E/xterm/./src/browser/ColorContrastCache.ts","webpack://_N_E/xterm/./src/browser/Lifecycle.ts","webpack://_N_E/xterm/./src/browser/Linkifier2.ts","webpack://_N_E/xterm/./src/browser/LocalizableStrings.ts","webpack://_N_E/xterm/./src/browser/OscLinkProvider.ts","webpack://_N_E/xterm/./src/browser/RenderDebouncer.ts","webpack://_N_E/xterm/./src/browser/ScreenDprMonitor.ts","webpack://_N_E/xterm/./src/browser/Terminal.ts","webpack://_N_E/xterm/./src/browser/TimeBasedDebouncer.ts","webpack://_N_E/xterm/./src/browser/Viewport.ts","webpack://_N_E/xterm/./src/browser/decorations/BufferDecorationRenderer.ts","webpack://_N_E/xterm/./src/browser/decorations/ColorZoneStore.ts","webpack://_N_E/xterm/./src/browser/decorations/OverviewRulerRenderer.ts","webpack://_N_E/xterm/./src/browser/input/CompositionHelper.ts","webpack://_N_E/xterm/./src/browser/input/Mouse.ts","webpack://_N_E/xterm/./src/browser/input/MoveToCell.ts","webpack://_N_E/xterm/./src/browser/renderer/dom/DomRenderer.ts","webpack://_N_E/xterm/./src/browser/renderer/dom/DomRendererRowFactory.ts","webpack://_N_E/xterm/./src/browser/renderer/dom/WidthCache.ts","webpack://_N_E/xterm/./src/browser/renderer/shared/Constants.ts","webpack://_N_E/xterm/./src/browser/renderer/shared/RendererUtils.ts","webpack://_N_E/xterm/./src/browser/selection/SelectionModel.ts","webpack://_N_E/xterm/./src/browser/services/CharSizeService.ts","webpack://_N_E/xterm/./src/browser/services/CharacterJoinerService.ts","webpack://_N_E/xterm/./src/browser/services/CoreBrowserService.ts","webpack://_N_E/xterm/./src/browser/services/MouseService.ts","webpack://_N_E/xterm/./src/browser/services/RenderService.ts","webpack://_N_E/xterm/./src/browser/services/SelectionService.ts","webpack://_N_E/xterm/./src/browser/services/Services.ts","webpack://_N_E/xterm/./src/browser/services/ThemeService.ts","webpack://_N_E/xterm/./src/common/CircularList.ts","webpack://_N_E/xterm/./src/common/Clone.ts","webpack://_N_E/xterm/./src/common/Color.ts","webpack://_N_E/xterm/./src/common/CoreTerminal.ts","webpack://_N_E/xterm/./src/common/EventEmitter.ts","webpack://_N_E/xterm/./src/common/InputHandler.ts","webpack://_N_E/xterm/./src/common/Lifecycle.ts","webpack://_N_E/xterm/./src/common/MultiKeyMap.ts","webpack://_N_E/xterm/./src/common/Platform.ts","webpack://_N_E/xterm/./src/common/SortedList.ts","webpack://_N_E/xterm/./src/common/TaskQueue.ts","webpack://_N_E/xterm/./src/common/WindowsMode.ts","webpack://_N_E/xterm/./src/common/buffer/AttributeData.ts","webpack://_N_E/xterm/./src/common/buffer/Buffer.ts","webpack://_N_E/xterm/./src/common/buffer/BufferLine.ts","webpack://_N_E/xterm/./src/common/buffer/BufferRange.ts","webpack://_N_E/xterm/./src/common/buffer/BufferReflow.ts","webpack://_N_E/xterm/./src/common/buffer/BufferSet.ts","webpack://_N_E/xterm/./src/common/buffer/CellData.ts","webpack://_N_E/xterm/./src/common/buffer/Constants.ts","webpack://_N_E/xterm/./src/common/buffer/Marker.ts","webpack://_N_E/xterm/./src/common/data/Charsets.ts","webpack://_N_E/xterm/./src/common/data/EscapeSequences.ts","webpack://_N_E/xterm/./src/common/input/Keyboard.ts","webpack://_N_E/xterm/./src/common/input/TextDecoder.ts","webpack://_N_E/xterm/./src/common/input/UnicodeV6.ts","webpack://_N_E/xterm/./src/common/input/WriteBuffer.ts","webpack://_N_E/xterm/./src/common/input/XParseColor.ts","webpack://_N_E/xterm/./src/common/parser/Constants.ts","webpack://_N_E/xterm/./src/common/parser/DcsParser.ts","webpack://_N_E/xterm/./src/common/parser/EscapeSequenceParser.ts","webpack://_N_E/xterm/./src/common/parser/OscParser.ts","webpack://_N_E/xterm/./src/common/parser/Params.ts","webpack://_N_E/xterm/./src/common/public/AddonManager.ts","webpack://_N_E/xterm/./src/common/public/BufferApiView.ts","webpack://_N_E/xterm/./src/common/public/BufferLineApiView.ts","webpack://_N_E/xterm/./src/common/public/BufferNamespaceApi.ts","webpack://_N_E/xterm/./src/common/public/ParserApi.ts","webpack://_N_E/xterm/./src/common/public/UnicodeApi.ts","webpack://_N_E/xterm/./src/common/services/BufferService.ts","webpack://_N_E/xterm/./src/common/services/CharsetService.ts","webpack://_N_E/xterm/./src/common/services/CoreMouseService.ts","webpack://_N_E/xterm/./src/common/services/CoreService.ts","webpack://_N_E/xterm/./src/common/services/DecorationService.ts","webpack://_N_E/xterm/./src/common/services/InstantiationService.ts","webpack://_N_E/xterm/./src/common/services/LogService.ts","webpack://_N_E/xterm/./src/common/services/OptionsService.ts","webpack://_N_E/xterm/./src/common/services/OscLinkService.ts","webpack://_N_E/xterm/./src/common/services/ServiceRegistry.ts","webpack://_N_E/xterm/./src/common/services/Services.ts","webpack://_N_E/xterm/./src/common/services/UnicodeService.ts","webpack://_N_E/xterm/webpack/bootstrap","webpack://_N_E/xterm/./src/browser/public/Terminal.ts","webpack://_N_E/<anon>"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IBuffer } from 'common/buffer/Types';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityContainer: HTMLElement;\n\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n  private _liveRegionDebouncer: IRenderDebouncer;\n\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityContainer = document.createElement('div');\n    this._accessibilityContainer.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityContainer.appendChild(this._rowContainer);\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityContainer.appendChild(this._liveRegion);\n    this._liveRegionDebouncer = this.register(new TimeBasedDebouncer(this._renderRows.bind(this)));\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityContainer);\n\n    this.register(this._terminal.onResize(e => this._handleResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._handleChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._handleChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._handleTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._handleKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor(window);\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n\n    this._refreshRows();\n    this.register(toDisposable(() => {\n      this._accessibilityContainer.remove();\n      this._rowElements.length = 0;\n    }));\n  }\n\n  private _handleTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._handleChar(' ');\n    }\n  }\n\n  private _handleChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityContainer.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      this._liveRegion.remove();\n    }\n  }\n\n  private _handleKey(keyChar: string): void {\n    this._clearLiveRegion();\n    // Only add the char if there is no control character.\n    if (!/\\p{Control}/u.test(keyChar)) {\n      this._charsToConsume.push(keyChar);\n    }\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._liveRegionDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n\n  private _handleBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _handleResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.css.cell.height) {\n      return;\n    }\n    this._accessibilityContainer.style.width = `${this._renderService.dimensions.css.canvas.width}px`;\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._handleResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.css.cell.height}px`;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService, optionsService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode && optionsService.rawOptions.ignoreBracketedPasteMode !== true);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IBufferCellPosition, ILink, ILinkDecorations, ILinkProvider, ILinkWithState, ILinkifier2, ILinkifierEvent } from 'browser/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, disposeArray, getDisposeArrayDisposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { IBufferService } from 'common/services/Services';\nimport { IMouseService, IRenderService } from './services/Services';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _wasResized: boolean = false;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private readonly _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onShowLinkUnderline = this._onShowLinkUnderline.event;\n  private readonly _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onHideLinkUnderline = this._onHideLinkUnderline.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n    this.register(toDisposable(() => {\n      this._lastMouseEvent = undefined;\n    }));\n    // Listen to resize to catch the case where it's resized and the cursor is out of the viewport.\n    this.register(this._bufferService.onResize(() => {\n      this._clearCurrentLink();\n      this._wasResized = true;\n    }));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._handleMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _handleMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._handleHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _handleHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine\n    //       should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y || this._wasResized) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      this._wasResized = false;\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Listen to viewport changes to re-render the link under the cursor (only when the line the\n      // link is on changes)\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // Sanity check, this shouldn't happen in practice as this listener would be disposed\n          if (!this._currentLink) {\n            return;\n          }\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          const end = this._bufferService.buffer.ydisp + 1 + e.end;\n          // Only clear the link if the viewport change happened on this line\n          if (this._currentLink.link.range.start.y >= start && this._currentLink.link.range.end.y <= end) {\n            this._clearCurrentLink(start, end);\n            if (this._lastMouseEvent && this._element) {\n              // re-eval previously active link after changes\n              const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService!);\n              if (position) {\n                this._askForLink(position, false);\n              }\n            }\n          }\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const lower = link.range.start.y * this._bufferService.cols + link.range.start.x;\n    const upper = link.range.end.y * this._bufferService.cols + link.range.end.x;\n    const current = position.y * this._bufferService.cols + position.x;\n    return (lower <= current && current <= upper);\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILink, ILinkProvider } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService, IOscLinkService } from 'common/services/Services';\n\nexport class OscLinkProvider implements ILinkProvider {\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IOscLinkService private readonly _oscLinkService: IOscLinkService\n  ) {\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const line = this._bufferService.buffer.lines.get(y - 1);\n    if (!line) {\n      callback(undefined);\n      return;\n    }\n\n    const result: ILink[] = [];\n    const linkHandler = this._optionsService.rawOptions.linkHandler;\n    const cell = new CellData();\n    const lineLength = line.getTrimmedLength();\n    let currentLinkId = -1;\n    let currentStart = -1;\n    let finishLink = false;\n    for (let x = 0; x < lineLength; x++) {\n      // Minor optimization, only check for content if there isn't a link in case the link ends with\n      // a null cell\n      if (currentStart === -1 && !line.hasContent(x)) {\n        continue;\n      }\n\n      line.loadCell(x, cell);\n      if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n        if (currentStart === -1) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n          continue;\n        } else {\n          finishLink = cell.extended.urlId !== currentLinkId;\n        }\n      } else {\n        if (currentStart !== -1) {\n          finishLink = true;\n        }\n      }\n\n      if (finishLink || (currentStart !== -1 && x === lineLength - 1)) {\n        const text = this._oscLinkService.getLinkData(currentLinkId)?.uri;\n        if (text) {\n          // These ranges are 1-based\n          const range: IBufferRange = {\n            start: {\n              x: currentStart + 1,\n              y\n            },\n            end: {\n              // Offset end x if it's a link that ends on the last cell in the line\n              x: x + (!finishLink && x === lineLength - 1 ? 1 : 0),\n              y\n            }\n          };\n\n          let ignoreLink = false;\n          if (!linkHandler?.allowNonHttpProtocols) {\n            try {\n              const parsed = new URL(text);\n              if (!['http:', 'https:'].includes(parsed.protocol)) {\n                ignoreLink = true;\n              }\n            } catch (e) {\n              // Ignore invalid URLs to prevent unexpected behaviors\n              ignoreLink = true;\n            }\n          }\n\n          if (!ignoreLink) {\n            // OSC links always use underline and pointer decorations\n            result.push({\n              text,\n              range,\n              activate: (e, text) => (linkHandler ? linkHandler.activate(e, text, range) : defaultActivate(e, text)),\n              hover: (e, text) => linkHandler?.hover?.(e, text, range),\n              leave: (e, text) => linkHandler?.leave?.(e, text, range)\n            });\n          }\n        }\n        finishLink = false;\n\n        // Clear link or start a new link if one starts immediately\n        if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n        } else {\n          currentStart = -1;\n          currentLinkId = -1;\n        }\n      }\n    }\n\n    // TODO: Handle fetching and returning other link ranges to underline other links with the same\n    //       id\n    callback(result);\n  }\n}\n\nfunction defaultActivate(e: MouseEvent, uri: string): void {\n  const answer = confirm(`Do you want to navigate to ${uri}?\\n\\nWARNING: This link could potentially be dangerous`);\n  if (answer) {\n    const newWindow = window.open();\n    if (newWindow) {\n      try {\n        newWindow.opener = null;\n      } catch {\n        // no-op, Electron can throw\n      }\n      newWindow.location.href = uri;\n    } else {\n      console.warn('Opening link blocked as opener could not be cleared');\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _parentWindow: Window,\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._parentWindow.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  constructor(private _parentWindow: Window) {\n    super();\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this.register(toDisposable(() => {\n      this.clearListener();\n    }));\n  }\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(this._parentWindow.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { copyHandler, handlePasteEvent, moveTextAreaUnderMouseCursor, paste, rightClickHandler } from 'browser/Clipboard';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { OscLinkProvider } from 'browser/OscLinkProvider';\nimport { CharacterJoinerHandler, CustomKeyEventHandler, IBrowser, IBufferRange, ICompositionHelper, ILinkifier2, ITerminal, IViewport } from 'browser/Types';\nimport { Viewport } from 'browser/Viewport';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { IRenderer } from 'browser/renderer/shared/Types';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { MouseService } from 'browser/services/MouseService';\nimport { RenderService } from 'browser/services/RenderService';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport { ICharSizeService, ICharacterJoinerService, ICoreBrowserService, IMouseService, IRenderService, ISelectionService, IThemeService } from 'browser/services/Services';\nimport { ThemeService } from 'browser/services/ThemeService';\nimport { color, rgba } from 'common/Color';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { ColorRequestType, CoreMouseAction, CoreMouseButton, CoreMouseEventType, IColorEvent, ITerminalOptions, KeyboardResultType, ScrollSource, SpecialColorIndex } from 'common/Types';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { IBuffer } from 'common/buffer/Types';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\nimport { IDecoration, IDecorationOptions, IDisposable, ILinkProvider, IMarker } from 'xterm';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { AccessibilityManager } from './AccessibilityManager';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _themeService: IThemeService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: MutableDisposable<AccessibilityManager> = this.register(new MutableDisposable());\n\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onKey = this.register(new EventEmitter<{ key: string, domEvent: KeyboardEvent }>());\n  public readonly onKey = this._onKey.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onBell = this.register(new EventEmitter<void>());\n  public readonly onBell = this._onBell.event;\n\n  private _onFocus = this.register(new EventEmitter<void>());\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = this.register(new EventEmitter<void>());\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = this.register(new EventEmitter<string>());\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = this.register(new EventEmitter<number>());\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n  private _onWillOpen = this.register(new EventEmitter<HTMLElement>());\n  public get onWillOpen(): IEvent<HTMLElement> { return this._onWillOpen.event; }\n\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this.linkifier2.registerLinkProvider(this._instantiationService.createInstance(OscLinkProvider));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n\n    this.register(toDisposable(() => {\n      this._customKeyEventHandler = undefined;\n      this.element?.parentNode?.removeChild(this.element);\n    }));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._themeService) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi';\n      let ident = '';\n      switch (req.index) {\n        case SpecialColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case SpecialColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case SpecialColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      switch (req.type) {\n        case ColorRequestType.REPORT:\n          const channels = color.toColorRGB(acc === 'ansi'\n            ? this._themeService.colors.ansi[req.index]\n            : this._themeService.colors[acc]);\n          this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n          break;\n        case ColorRequestType.SET:\n          if (acc === 'ansi') {\n            this._themeService.modifyColors(colors => colors.ansi[req.index] = rgba.toColor(...req.color));\n          } else {\n            const narrowedAcc = acc;\n            this._themeService.modifyColors(colors => colors[narrowedAcc] = rgba.toColor(...req.color));\n          }\n          break;\n        case ColorRequestType.RESTORE:\n          this._themeService.restoreColor(req.index);\n          break;\n      }\n    }\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _handleScreenReaderModeOptionChange(value: boolean): void {\n    if (value) {\n      if (!this._accessibilityManager.value && this._renderService) {\n        this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n      }\n    } else {\n      this._accessibilityManager.clear();\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _handleTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _handleTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.css.cell.height;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.css.cell.width * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.css.cell.height;\n    const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService, this.optionsService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    if (!Browser.isChromeOS) {\n      // ChromeVox on ChromeOS does not like this. See\n      // https://issuetracker.google.com/issues/260170397\n      this.textarea.setAttribute('aria-multiline', 'false');\n    }\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n\n    // Register the core browser service before the generic textarea handlers are registered so it\n    // handles them first. Otherwise the renderers may use the wrong focus state.\n    this._coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea, this._document.defaultView ?? window);\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._handleTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._handleTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._themeService = this._instantiationService.createInstance(ThemeService);\n    this._instantiationService.setService(IThemeService, this._themeService);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    try {\n      this._onWillOpen.fire(this.element);\n    }\n    catch { /* fails to load addon for some reason */ }\n    if (!this._renderService.hasRenderer()) {\n      this._renderService.setRenderer(this._createRenderer());\n    }\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport, this._viewportElement, this._viewportScrollArea);\n    this.viewport.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent, ScrollSource.VIEWPORT)),\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.handleCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.handleResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.handleBlur()));\n    this.register(this.onFocus(() => this._renderService!.handleFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.handleSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.handleMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n    }\n    this.register(this.optionsService.onSpecificOptionChange('screenReaderMode', e => this._handleScreenReaderModeOptionChange(e)));\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n    }\n    this.optionsService.onSpecificOptionChange('overviewRulerWidth', value => {\n      if (!this._overviewRulerRenderer && value && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    return this._instantiationService.createInstance(DomRenderer, this.element!, this.screenElement!, this._viewportElement!, this.linkifier2);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getMouseReportCoords(ev, self.screenElement!);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.col,\n        row: pos.row,\n        x: pos.x,\n        y: pos.y,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        el.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        el.addEventListener('mouseup', eventListeners.mouseup);\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.handleWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.handleTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.handleTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    if (source === ScrollSource.VIEWPORT) {\n      super.scrollLines(disp, suppressScrollEvent, source);\n      this.refresh(0, this.rows - 1);\n    } else {\n      this.viewport?.scrollLines(disp);\n    }\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService, this.optionsService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public registerMarker(cursorYOffset: number): IMarker {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown [KeyboardEvent].\n   *\n   * [KeyboardEvent]: https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, we don't cancel them (unless ctrl or alt\n    // is also depressed) so that the cursor textarea can be updated, which triggers the screen\n    // reader to read it.\n    if (!this.optionsService.rawOptions.screenReaderMode || event.altKey || event.ctrlKey) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    // IMPORTANT: Fire scroll event before viewport is reset. This ensures embedders get the clear\n    // scroll event and that the viewport's state will be valid for immediate writes.\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n    this.viewport?.reset();\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n    this.viewport?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.css.canvas.width.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.css.canvas.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.css.cell.width.toFixed(0);\n        const cellHeight = this._renderService.dimensions.css.cell.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IViewport, ReadonlyColorSet } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentDeviceCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<{ amount: number, suppressScrollEvent: boolean }>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that\n    // case, therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._handleScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    this._handleThemeChange(themeService.colors);\n    this.register(themeService.onChangeColors(e => this._handleThemeChange(e)));\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.syncScrollArea()));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea());\n  }\n\n  private _handleThemeChange(colors: ReadonlyColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  public reset(): void {\n    this._currentRowHeight = 0;\n    this._currentDeviceCellHeight = 0;\n    this._lastRecordedBufferLength = 0;\n    this._lastRecordedViewportHeight = 0;\n    this._lastRecordedBufferHeight = 0;\n    this._lastTouchY = 0;\n    this._lastScrollTop = 0;\n    // Sync on next animation frame to ensure the new terminal state is used\n    this._coreBrowserService.window.requestAnimationFrame(() => this.syncScrollArea());\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.device.cell.height / this._coreBrowserService.dpr;\n      this._currentDeviceCellHeight = this._renderService.dimensions.device.cell.height;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.css.canvas.height);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.css.canvas.height) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.device.cell.height !== this._currentDeviceCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _handleScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._onRequestScrollLines.fire({ amount: 0, suppressScrollEvent: true });\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._onRequestScrollLines.fire({ amount: diff, suppressScrollEvent: true });\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public handleWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  public scrollLines(disp: number): void {\n    if (disp === 0) {\n      return;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._onRequestScrollLines.fire({ amount: disp, suppressScrollEvent: false });\n    } else {\n      const amount = disp * this._currentRowHeight;\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        this._smoothScrollState.target = this._smoothScrollState.origin + amount;\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n\n  public getBufferElements(startLine: number, endLine?: number): { bufferElements: HTMLElement[], cursorElement?: HTMLElement } {\n    let currentLine: string = '';\n    let cursorElement: HTMLElement | undefined;\n    const bufferElements: HTMLElement[] = [];\n    const end = endLine ?? this._bufferService.buffer.lines.length;\n    const lines = this._bufferService.buffer.lines;\n    for (let i = startLine; i < end; i++) {\n      const line = lines.get(i);\n      if (!line) {\n        continue;\n      }\n      const isWrapped = lines.get(i + 1)?.isWrapped;\n      currentLine += line.translateToString(!isWrapped);\n      if (!isWrapped || i === lines.length - 1) {\n        const div = document.createElement('div');\n        div.textContent = currentLine;\n        bufferElements.push(div);\n        if (currentLine.length > 0) {\n          cursorElement = div;\n        }\n        currentLine = '';\n      }\n    }\n    return { bufferElements, cursorElement };\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public handleTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public handleTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(addDisposableDomListener(window, 'resize', () => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n    this.register(toDisposable(() => {\n      this._container.remove();\n      this._decorationElements.clear();\n    }));\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this._doRefreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  private _doRefreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = document.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.classList.toggle('xterm-decoration-top-layer', decoration?.options?.layer === 'top');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.css.cell.width)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n        decoration.onDispose(() => {\n          this._decorationElements.delete(decoration);\n          element!.remove();\n        });\n      }\n      element.style.top = `${line * this._renderService.dimensions.css.cell.height}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n    decoration.dispose();\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowseService: ICoreBrowserService\n  ) {\n    super();\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n    this.register(toDisposable(() => {\n      this._canvas?.remove();\n    }));\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onSpecificOptionChange('overviewRulerWidth', () => this._queueRefresh(true)));\n    // device pixel ratio changed\n    this.register(addDisposableDomListener(this._coreBrowseService.window, 'resize', () => this._queueRefresh(true)));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._coreBrowseService.dpr);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._coreBrowseService.dpr);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._coreBrowseService.dpr);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowseService.dpr);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._coreBrowseService.window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\nimport { C0 } from 'common/data/EscapeSequences';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @returns Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n\n        const diff = newValue.replace(oldValue, '');\n\n        this._dataAlreadySent = diff;\n\n        if (newValue.length > oldValue.length) {\n          this._coreService.triggerDataEvent(diff, true);\n        } else if (newValue.length < oldValue.length) {\n          this._coreService.triggerDataEvent(`${C0.DEL}`, true);\n        } else if ((newValue.length === oldValue.length) && (newValue !== oldValue)) {\n          this._coreService.triggerDataEvent(newValue, true);\n        }\n\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.css.cell.height;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height;\n      const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param window The window object the element belongs to.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param hasValidCharSize Whether there is a valid character size available.\n * @param cssCellWidth The cell width device pixel render dimensions.\n * @param cssCellHeight The cell height device pixel render dimensions.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: Pick<MouseEvent, 'clientX' | 'clientY'>, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, cssCellWidth: number, cssCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? cssCellWidth / 2 : 0)) / cssCellWidth);\n  coords[1] = Math.ceil(coords[1] / cssCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(startY, bufferService), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(currentRow: number, bufferService: IBufferService): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param str The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DomRendererRowFactory, RowCss } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent, ReadonlyColorSet } from 'browser/Types';\nimport { color } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n  private _widthCache: WidthCache;\n\n  public dimensions: IRenderDimensions;\n\n  public readonly onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>()).event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = createRenderDimensions();\n    this._updateDimensions();\n    this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this.register(this._themeService.onChangeColors(e => this._injectCss(e)));\n    this._injectCss(this._themeService.colors);\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._handleLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._handleLinkLeave(e)));\n\n    this.register(toDisposable(() => {\n      this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n      // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n      // https://github.com/xtermjs/xterm.js/issues/2960\n      this._rowContainer.remove();\n      this._selectionContainer.remove();\n      this._widthCache.dispose();\n      this._themeStyleElement.remove();\n      this._dimensionsStyleElement.remove();\n    }));\n\n    this._widthCache = new WidthCache(document);\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  private _updateDimensions(): void {\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = this._charSizeService.width * dpr;\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.left = 0;\n    this.dimensions.device.char.top = 0;\n    this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols;\n    this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows;\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.css.canvas.width}px`;\n      element.style.height = `${this.dimensions.css.cell.height}px`;\n      element.style.lineHeight = `${this.dimensions.css.cell.height}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +   // TODO: find workaround for inline-block (creates ~20% render penalty)\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  private _injectCss(colors: ReadonlyColorSet): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      ` font-kerning: none;` +\n      ` white-space: pre` +\n      `}`;\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .xterm-dim {` +\n      ` color: ${color.multiplyOpacity(colors.foreground, 0.5).css};` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${RowCss.BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  border-bottom-style: hidden;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${colors.cursor.css};` +\n      `  color: ${colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: inherit;` +\n      `  color: ${colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}:not(.${RowCss.CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${colors.cursor.css};` +\n      ` color: ${colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_OUTLINE_CLASS} {` +\n      ` outline: 1px solid ${colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` border-bottom: 1px ${colors.cursor.css};` +\n      ` border-bottom-style: solid;` +\n      ` height: calc(100% - 1px);` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    for (const [i, c] of colors.ansi.entries()) {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(c, 0.5).css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    }\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(colors.background).css}; }` +\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(color.opaque(colors.background), 0.5).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  /**\n   * default letter spacing\n   * Due to rounding issues in dimensions dpr calc glyph might render\n   * slightly too wide or too narrow. The method corrects the stacking offsets\n   * by applying a default letter-spacing for all chars.\n   * The value gets passed to the row factory to avoid setting this value again\n   * (render speedup is roughly 10%).\n   */\n  private _setDefaultSpacing(): void {\n    // measure same char as in CharSizeService to get the base deviation\n    const spacing = this.dimensions.css.cell.width - this._widthCache.get('W', false, false);\n    this._rowContainer.style.letterSpacing = `${spacing}px`;\n    this._rowFactory.defaultSpacing = spacing;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public handleCharSizeChanged(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  public handleBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public handleFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n    this.renderRows(this._bufferService.buffer.y, this._bufferService.buffer.y);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    this._selectionContainer.replaceChildren();\n    this._rowFactory.handleSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.css.cell.height}px`;\n    element.style.top = `${row * this.dimensions.css.cell.height}px`;\n    element.style.left = `${colStart * this.dimensions.css.cell.width}px`;\n    element.style.width = `${this.dimensions.css.cell.width * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public handleCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  private _handleOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    // Refresh CSS\n    this._injectCss(this._themeService.colors);\n    // update spacing cache\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      /**\n       * NOTE: This used to be `e.innerText = '';` but that doesn't work when using `jsdom` and\n       * `@testing-library/react`\n       *\n       * references:\n       * - https://github.com/testing-library/react-testing-library/issues/1146\n       * - https://github.com/jsdom/jsdom/issues/1245\n       */\n      e.replaceChildren();\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    for (let y = start; y <= end; y++) {\n      const row = y + buffer.ydisp;\n      const rowElement = this._rowElements[y];\n      const lineData = buffer.lines.get(row);\n      if (!rowElement || !lineData) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          lineData,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          -1,\n          -1\n        )\n      );\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _handleLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _handleLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    /**\n     * NOTE: The linkifier may send out of viewport y-values if:\n     * - negative y-value: the link started at a higher line\n     * - y-value >= maxY: the link ends at a line below viewport\n     *\n     * For negative y-values we can simply adjust x = 0,\n     * as higher up link start means, that everything from\n     * (0,0) is a link under top-down-left-right char progression\n     *\n     * Additionally there might be a small chance of out-of-sync x|y-values\n     * from a race condition of render updates vs. link event handler execution:\n     * - (sync) resize: chances terminal buffer in sync, schedules render update async\n     * - (async) link handler race condition: new buffer metrics, but still on old render state\n     * - (async) render update: brings term metrics and render state back in sync\n     */\n    // clip coords into viewport\n    if (y < 0) x = 0;\n    if (y2 < 0) x2 = 0;\n    const maxY = this._bufferService.rows - 1;\n    y = Math.max(Math.min(y, maxY), 0);\n    y2 = Math.max(Math.min(y2, maxY), 0);\n\n    cols = Math.min(cols, this._bufferService.cols);\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    // refresh rows within link range\n    for (let i = y; i <= y2; ++i) {\n      const row = i + buffer.ydisp;\n      const rowElement = this._rowElements[i];\n      const bufferline = buffer.lines.get(row);\n      if (!rowElement || !bufferline) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          bufferline,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          enabled ? (i === y ? x : 0) : -1,\n          enabled ? ((i === y2 ? x2 : cols) - 1) : -1\n        )\n      );\n    }\n  }\n}\n","/**\n * Copyright (c) 2018, 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/shared/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { IColorContrastCache } from 'browser/Types';\n\n\nexport const enum RowCss {\n  BOLD_CLASS = 'xterm-bold',\n  DIM_CLASS = 'xterm-dim',\n  ITALIC_CLASS = 'xterm-italic',\n  UNDERLINE_CLASS = 'xterm-underline',\n  OVERLINE_CLASS = 'xterm-overline',\n  STRIKETHROUGH_CLASS = 'xterm-strikethrough',\n  CURSOR_CLASS = 'xterm-cursor',\n  CURSOR_BLINK_CLASS = 'xterm-cursor-blink',\n  CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block',\n  CURSOR_STYLE_OUTLINE_CLASS = 'xterm-cursor-outline',\n  CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar',\n  CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline'\n}\n\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  public defaultSpacing = 0;\n\n  constructor(\n    private readonly _document: Document,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {}\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(\n    lineData: IBufferLine,\n    row: number,\n    isCursorRow: boolean,\n    cursorStyle: string | undefined,\n    cursorInactiveStyle: string | undefined,\n    cursorX: number,\n    cursorBlink: boolean,\n    cellWidth: number,\n    widthCache: WidthCache,\n    linkStart: number,\n    linkEnd: number\n  ): HTMLSpanElement[] {\n\n    const elements: HTMLSpanElement[] = [];\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    const colors = this._themeService.colors;\n\n    let lineLength = lineData.getNoBgTrimmedLength();\n    if (isCursorRow && lineLength < cursorX + 1) {\n      lineLength = cursorX + 1;\n    }\n\n    let charElement: HTMLSpanElement | undefined;\n    let cellAmount = 0;\n    let text = '';\n    let oldBg = 0;\n    let oldFg = 0;\n    let oldExt = 0;\n    let oldLinkHover: number | boolean = false;\n    let oldSpacing = 0;\n    let oldIsInSelection: boolean = false;\n    let spacing = 0;\n    const classes: string[] = [];\n\n    const hasHover = linkStart !== -1 && linkEnd !== -1;\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const isInSelection = this._isCellInSelection(x, row);\n      const isCursorCell = isCursorRow && x === cursorX;\n      const isLinkHover = hasHover && x >= linkStart && x <= linkEnd;\n\n      let isDecorated = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        isDecorated = true;\n      });\n\n      // get chars to render for this cell\n      let chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n      if (chars === ' ' && (cell.isUnderline() || cell.isOverline())) {\n        chars = '\\xa0';\n      }\n\n      // lookup char render width and calc spacing\n      spacing = width * cellWidth - widthCache.get(chars, cell.isBold(), cell.isItalic());\n\n      if (!charElement) {\n        charElement = this._document.createElement('span');\n      } else {\n        /**\n         * chars can only be merged on existing span if:\n         * - existing span only contains mergeable chars (cellAmount != 0)\n         * - bg did not change (or both are in selection)\n         * - fg did not change (or both are in selection and selection fg is set)\n         * - ext did not change\n         * - underline from hover state did not change\n         * - cell content renders to same letter-spacing\n         * - cell is not cursor\n         */\n        if (\n          cellAmount\n          && (\n            (isInSelection && oldIsInSelection)\n            || (!isInSelection && !oldIsInSelection && cell.bg === oldBg)\n          )\n          && (\n            (isInSelection && oldIsInSelection && colors.selectionForeground)\n            || cell.fg === oldFg\n          )\n          && cell.extended.ext === oldExt\n          && isLinkHover === oldLinkHover\n          && spacing === oldSpacing\n          && !isCursorCell\n          && !isJoined\n          && !isDecorated\n        ) {\n          // no span alterations, thus only account chars skipping all code below\n          text += chars;\n          cellAmount++;\n          continue;\n        } else {\n          /**\n           * cannot merge:\n           * - apply left-over text to old span\n           * - create new span, reset state holders cellAmount & text\n           */\n          if (cellAmount) {\n            charElement.textContent = text;\n          }\n          charElement = this._document.createElement('span');\n          cellAmount = 0;\n          text = '';\n        }\n      }\n      // preserve conditions for next merger eval round\n      oldBg = cell.bg;\n      oldFg = cell.fg;\n      oldExt = cell.extended.ext;\n      oldLinkHover = isLinkHover;\n      oldSpacing = spacing;\n      oldIsInSelection = isInSelection;\n\n      if (isJoined) {\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorCell) {\n        classes.push(RowCss.CURSOR_CLASS);\n        if (this._coreBrowserService.isFocused) {\n          if (cursorBlink) {\n            classes.push(RowCss.CURSOR_BLINK_CLASS);\n          }\n          classes.push(\n            cursorStyle === 'bar'\n              ? RowCss.CURSOR_STYLE_BAR_CLASS\n              : cursorStyle === 'underline'\n                ? RowCss.CURSOR_STYLE_UNDERLINE_CLASS\n                : RowCss.CURSOR_STYLE_BLOCK_CLASS\n          );\n        } else {\n          if (cursorInactiveStyle) {\n            switch (cursorInactiveStyle) {\n              case 'outline':\n                classes.push(RowCss.CURSOR_STYLE_OUTLINE_CLASS);\n                break;\n              case 'block':\n                classes.push(RowCss.CURSOR_STYLE_BLOCK_CLASS);\n                break;\n              case 'bar':\n                classes.push(RowCss.CURSOR_STYLE_BAR_CLASS);\n                break;\n              case 'underline':\n                classes.push(RowCss.CURSOR_STYLE_UNDERLINE_CLASS);\n                break;\n              default:\n                break;\n            }\n          }\n        }\n      }\n\n      if (cell.isBold()) {\n        classes.push(RowCss.BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        classes.push(RowCss.ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        classes.push(RowCss.DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        text = WHITESPACE_CELL_CHAR;\n      } else {\n        text = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        classes.push(`${RowCss.UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isOverline()) {\n        classes.push(RowCss.OVERLINE_CLASS);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        classes.push(RowCss.STRIKETHROUGH_CLASS);\n      }\n\n      // apply link hover underline late, effectively overrides any previous text-decoration\n      // settings\n      if (isLinkHover) {\n        charElement.style.textDecoration = 'underline';\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      // Apply selection\n      if (!isTop && isInSelection) {\n        // If in the selection, force the element to be above the selection to improve contrast and\n        // support opaque selections. The applies background is not actually needed here as\n        // selection is drawn in a seperate container, the main purpose of this to ensuring minimum\n        // contrast ratio\n        bgOverride = this._coreBrowserService.isFocused ? colors.selectionBackgroundOpaque : colors.selectionInactiveBackgroundOpaque;\n        bg = bgOverride.rgba >> 8 & 0xFFFFFF;\n        bgColorMode = Attributes.CM_RGB;\n        // Since an opaque selection is being rendered, the selection pretends to be a decoration to\n        // ensure text is drawn above the selection.\n        isTop = true;\n        // Apply selection foreground if applicable\n        if (colors.selectionForeground) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = colors.selectionForeground;\n        }\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        classes.push('xterm-decoration-top');\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = colors.ansi[bg];\n          classes.push(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = colors.foreground;\n            classes.push(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.ansi[fg], cell, bgOverride, undefined)) {\n            classes.push(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.foreground, cell, bgOverride, undefined)) {\n            if (isInverse) {\n              classes.push(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // apply CSS classes\n      // slightly faster than using classList by omitting\n      // checks for doubled entries (code above should not have doublets)\n      if (classes.length) {\n        charElement.className = classes.join(' ');\n        classes.length = 0;\n      }\n\n      // exclude conditions for cell merging - never merge these\n      if (!isCursorCell && !isJoined && !isDecorated) {\n        cellAmount++;\n      } else {\n        charElement.textContent = text;\n      }\n      // apply letter-spacing rule\n      if (spacing !== this.defaultSpacing) {\n        charElement.style.letterSpacing = `${spacing}px`;\n      }\n\n      elements.push(charElement);\n      x = lastCharX;\n    }\n\n    // postfix text of last merged span\n    if (charElement && cellAmount) {\n      charElement.textContent = text;\n    }\n\n    return elements;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    const cache = this._getContrastCache(cell);\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = cache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      // Dim cells only require half the contrast, otherwise they wouldn't be distinguishable from\n      // non-dim cells\n      const ratio = this._optionsService.rawOptions.minimumContrastRatio / (cell.isDim() ? 2 : 1);\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, ratio);\n      cache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _getContrastCache(cell: ICellData): IColorContrastCache {\n    if (cell.isDim()) {\n      return this._themeService.colors.halfContrastCache;\n    }\n    return this._themeService.colors.contrastCache;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { FontWeight } from 'common/services/Services';\n\n\nexport const enum WidthCacheSettings {\n  /** sentinel for unset values in flat cache */\n  FLAT_UNSET = -9999,\n  /** size of flat cache, size-1 equals highest codepoint handled by flat */\n  FLAT_SIZE = 256,\n  /** char repeat for measuring */\n  REPEAT = 32\n}\n\n\nconst enum FontVariant {\n  REGULAR = 0,\n  BOLD = 1,\n  ITALIC = 2,\n  BOLD_ITALIC = 3\n}\n\n\nexport class WidthCache implements IDisposable {\n  // flat cache for regular variant up to CacheSettings.FLAT_SIZE\n  // NOTE: ~4x faster access than holey (serving >>80% of terminal content)\n  //       It has a small memory footprint (only 1MB for full BMP caching),\n  //       still the sweet spot is not reached before touching 32k different codepoints,\n  //       thus we store the remaining <<20% of terminal data in a holey structure.\n  protected _flat = new Float32Array(WidthCacheSettings.FLAT_SIZE);\n\n  // holey cache for bold, italic and bold&italic for any string\n  // FIXME: can grow really big over time (~8.5 MB for full BMP caching),\n  //        so a shared API across terminals is needed\n  protected _holey: Map<string, number> | undefined;\n\n  private _font = '';\n  private _fontSize = 0;\n  private _weight: FontWeight = 'normal';\n  private _weightBold: FontWeight = 'bold';\n  private _container: HTMLDivElement;\n  private _measureElements: HTMLSpanElement[] = [];\n\n  constructor(_document: Document) {\n    this._container = _document.createElement('div');\n    this._container.style.position = 'absolute';\n    this._container.style.top = '-50000px';\n    this._container.style.width = '50000px';\n    // SP should stack in spans\n    this._container.style.whiteSpace = 'pre';\n    // avoid undercuts in non-monospace fonts from kerning\n    this._container.style.fontKerning = 'none';\n\n    const regular = _document.createElement('span');\n\n    const bold = _document.createElement('span');\n    bold.style.fontWeight = 'bold';\n\n    const italic = _document.createElement('span');\n    italic.style.fontStyle = 'italic';\n\n    const boldItalic = _document.createElement('span');\n    boldItalic.style.fontWeight = 'bold';\n    boldItalic.style.fontStyle = 'italic';\n\n    // NOTE: must be in order of FontVariant\n    this._measureElements = [regular, bold, italic, boldItalic];\n    this._container.appendChild(regular);\n    this._container.appendChild(bold);\n    this._container.appendChild(italic);\n    this._container.appendChild(boldItalic);\n\n    _document.body.appendChild(this._container);\n\n    this.clear();\n  }\n\n  public dispose(): void {\n    this._container.remove();           // remove elements from DOM\n    this._measureElements.length = 0;   // release element refs\n    this._holey = undefined;            // free cache memory via GC\n  }\n\n  /**\n   * Clear the width cache.\n   */\n  public clear(): void {\n    this._flat.fill(WidthCacheSettings.FLAT_UNSET);\n    // .clear() has some overhead, re-assign instead (>3 times faster)\n    this._holey = new Map<string, number>();\n  }\n\n  /**\n   * Set the font for measuring.\n   * Must be called for any changes on font settings.\n   * Also clears the cache.\n   */\n  public setFont(font: string, fontSize: number, weight: FontWeight, weightBold: FontWeight): void {\n    // skip if nothing changed\n    if (font === this._font\n      && fontSize === this._fontSize\n      && weight === this._weight\n      && weightBold === this._weightBold\n    ) {\n      return;\n    }\n\n    this._font = font;\n    this._fontSize = fontSize;\n    this._weight = weight;\n    this._weightBold = weightBold;\n\n    this._container.style.fontFamily = this._font;\n    this._container.style.fontSize = `${this._fontSize}px`;\n    this._measureElements[FontVariant.REGULAR].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD].style.fontWeight = `${weightBold}`;\n    this._measureElements[FontVariant.ITALIC].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD_ITALIC].style.fontWeight = `${weightBold}`;\n\n    this.clear();\n  }\n\n  /**\n   * Get the render width for cell content `c` with current font settings.\n   * `variant` denotes the font variant to be used.\n   */\n  public get(c: string, bold: boolean | number, italic: boolean | number): number {\n    let cp = 0;\n    if (!bold && !italic && c.length === 1 && (cp = c.charCodeAt(0)) < WidthCacheSettings.FLAT_SIZE) {\n      return this._flat[cp] !== WidthCacheSettings.FLAT_UNSET\n        ? this._flat[cp]\n        : (this._flat[cp] = this._measure(c, 0));\n    }\n    let key = c;\n    if (bold) key += 'B';\n    if (italic) key += 'I';\n    let width = this._holey!.get(key);\n    if (width === undefined) {\n      let variant = 0;\n      if (bold) variant |= FontVariant.BOLD;\n      if (italic) variant |= FontVariant.ITALIC;\n      width = this._measure(c, variant);\n      this._holey!.set(key, width);\n    }\n    return width;\n  }\n\n  protected _measure(c: string, variant: FontVariant): number {\n    const el = this._measureElements[variant];\n    el.textContent = c.repeat(WidthCacheSettings.REPEAT);\n    return el.offsetWidth / WidthCacheSettings.REPEAT;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge\n// would result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @returns Whether a refresh is necessary.\n   */\n  public handleTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n\nconst enum MeasureSettings {\n  REPEAT = 32\n}\n\n\nexport class CharSizeService extends Disposable implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private readonly _onCharSizeChange = this.register(new EventEmitter<void>());\n  public readonly onCharSizeChange = this._onCharSizeChange.event;\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n    this.register(this._optionsService.onMultipleOptionChange(['fontFamily', 'fontSize'], () => this.measure()));\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses\n// ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W'.repeat(MeasureSettings.REPEAT);\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._measureElement.style.whiteSpace = 'pre';\n    this._measureElement.style.fontKerning = 'none';\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = {\n      height: Number(this._measureElement.offsetHeight),\n      width: Number(this._measureElement.offsetWidth)\n    };\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width / MeasureSettings.REPEAT;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  private _isFocused = false;\n  private _cachedIsFocused: boolean | undefined = undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    public readonly window: Window & typeof globalThis\n  ) {\n    this._textarea.addEventListener('focus', () => this._isFocused = true);\n    this._textarea.addEventListener('blur', () => this._isFocused = false);\n  }\n\n  public get dpr(): number {\n    return this.window.devicePixelRatio;\n  }\n\n  public get isFocused(): boolean {\n    if (this._cachedIsFocused === undefined) {\n      this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus();\n      queueMicrotask(() => this._cachedIsFocused = undefined);\n    }\n    return this._cachedIsFocused;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getCoordsRelativeToElement } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.css.cell.width,\n      this._renderService.dimensions.css.cell.height,\n      isSelection\n    );\n  }\n\n  public getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined {\n    const coords = getCoordsRelativeToElement(window, event, element);\n    if (!this._charSizeService.hasValidSize) {\n      return undefined;\n    }\n    coords[0] = Math.min(Math.max(coords[0], 0), this._renderService.dimensions.css.canvas.width - 1);\n    coords[1] = Math.min(Math.max(coords[1], 0), this._renderService.dimensions.css.canvas.height - 1);\n    return {\n      col: Math.floor(coords[0] / this._renderService.dimensions.css.cell.width),\n      row: Math.floor(coords[1] / this._renderService.dimensions.css.cell.height),\n      x: Math.floor(coords[0]),\n      y: Math.floor(coords[1])\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, MutableDisposable } from 'common/Lifecycle';\nimport { DebouncedIdleTask } from 'common/TaskQueue';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderer: MutableDisposable<IRenderer> = this.register(new MutableDisposable());\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _screenDprMonitor: ScreenDprMonitor;\n  private _pausedResizeTask = new DebouncedIdleTask();\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private readonly _onDimensionsChange = this.register(new EventEmitter<IRenderDimensions>());\n  public readonly onDimensionsChange =  this._onDimensionsChange.event;\n  private readonly _onRenderedViewportChange = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRenderedViewportChange = this._onRenderedViewportChange.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onRefreshRequest = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRefreshRequest = this._onRefreshRequest.event;\n\n  public get dimensions(): IRenderDimensions { return this._renderer.value!.dimensions; }\n\n  constructor(\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    this._renderDebouncer = new RenderDebouncer(coreBrowserService.window, (start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor(coreBrowserService.window);\n    this._screenDprMonitor.setListener(() => this.handleDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer.value?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // Clear the renderer when the a change that could affect glyphs occurs\n    this.register(optionsService.onMultipleOptionChange([\n      'customGlyphs',\n      'drawBoldTextInBrightColors',\n      'letterSpacing',\n      'lineHeight',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontWeightBold',\n      'minimumContrastRatio'\n    ], () => {\n      this.clear();\n      this.handleResize(bufferService.cols, bufferService.rows);\n      this._fullRefresh();\n    }));\n\n    // Refresh the cursor line when the cursor changes\n    this.register(optionsService.onMultipleOptionChange([\n      'cursorBlink',\n      'cursorStyle'\n    ], () => this.refreshRows(bufferService.buffer.y, bufferService.buffer.y, true)));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(coreBrowserService.window, 'resize', () => this.handleDevicePixelRatioChange()));\n\n    this.register(themeService.onChangeColors(() => this._fullRefresh()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in coreBrowserService.window) {\n      const observer = new coreBrowserService.window.IntersectionObserver(e => this._handleIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _handleIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._pausedResizeTask.flush();\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n\n    // Since this is debounced, a resize event could have happened between the time a refresh was\n    // requested and when this triggers. Clamp the values of start and end to ensure they're valid\n    // given the current viewport state.\n    start = Math.min(start, this._rowCount - 1);\n    end = Math.min(end, this._rowCount - 1);\n\n    // Render\n    this._renderer.value.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.value.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.value.dimensions.css.canvas.width === this._canvasWidth && this._renderer.value.dimensions.css.canvas.height === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.value.dimensions);\n  }\n\n  public hasRenderer(): boolean {\n    return !!this._renderer.value;\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    this._renderer.value = renderer;\n    this._renderer.value.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.handleDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    if (this._isPaused) {\n      this._pausedResizeTask.set(() => this._renderer.value!.handleResize(cols, rows));\n    } else {\n      this._renderer.value.handleResize(cols, rows);\n    }\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public handleCharSizeChanged(): void {\n    this._renderer.value?.handleCharSizeChanged();\n  }\n\n  public handleBlur(): void {\n    this._renderer.value?.handleBlur();\n  }\n\n  public handleFocus(): void {\n    this._renderer.value?.handleFocus();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.value?.handleSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public handleCursorMove(): void {\n    this._renderer.value?.handleCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.value?.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { ICoreBrowserService, IMouseService, IRenderService, ISelectionService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport { getRangeLength } from 'common/buffer/BufferRange';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private readonly _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public readonly onLinuxMouseSelection = this._onLinuxMouseSelection.event;\n  private readonly _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public readonly onRequestRedraw = this._onRedrawRequest.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._handleMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._handleMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._handleTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._handleBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n\n    this.register(toDisposable(() => {\n      this._removeMouseDownListeners();\n    }));\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _handleTrim(amount: number): void {\n    const needsRefresh = this._model.handleTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._coreBrowserService.window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.css.canvas.height;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public handleMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._handleIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._handleSingleClick(event);\n      } else if (event.detail === 2) {\n        this._handleDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._handleTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _handleIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _handleSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _handleDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _handleTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _handleMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _handleMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _handleBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._handleTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column (0 to cols - 1) to the character index on the\n   * buffer line, the latter takes into account wide and null characters.\n   * @param bufferLine The buffer line to use.\n   * @param x The x index in the buffer line to convert.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, x: number): number {\n    let charIndex = x;\n    for (let i = 0; x >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && x !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords[0]);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param cell The cell to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { AllColorIndex, IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n  /**\n   * Parent window that the terminal is rendered into. DOM and rendering APIs\n   * (e.g. requestAnimationFrame) should be invoked in the context of this\n   * window.\n   */\n  readonly window: Window & typeof globalThis;\n  /**\n   * Helper for getting the devicePixelRatio of the parent window.\n   */\n  readonly dpr: number;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  hasRenderer(): boolean;\n  setRenderer(renderer: IRenderer): void;\n  handleDevicePixelRatioChange(): void;\n  handleResize(cols: number, rows: number): void;\n  handleCharSizeChanged(): void;\n  handleBlur(): void;\n  handleFocus(): void;\n  handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  handleCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  handleMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\nexport const IThemeService = createDecorator<IThemeService>('ThemeService');\nexport interface IThemeService {\n  serviceBrand: undefined;\n\n  readonly colors: ReadonlyColorSet;\n\n  readonly onChangeColors: IEvent<ReadonlyColorSet>;\n\n  restoreColor(slot?: AllColorIndex): void;\n  /**\n   * Allows external modifying of colors in the theme, this is used instead of {@link colors} to\n   * prevent accidental writes.\n   */\n  modifyColors(callback: (colors: IColorSet) => void): void;\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { IThemeService } from 'browser/services/Services';\nimport { IColorContrastCache, IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { channels, color, css, NULL_COLOR } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IOptionsService, ITheme } from 'common/services/Services';\nimport { AllColorIndex, IColor, SpecialColorIndex } from 'common/Types';\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\nexport class ThemeService extends Disposable implements IThemeService {\n  public serviceBrand: undefined;\n\n  private _colors: IColorSet;\n  private _contrastCache: IColorContrastCache = new ColorContrastCache();\n  private _halfContrastCache: IColorContrastCache = new ColorContrastCache();\n  private _restoreColors!: IRestoreColorSet;\n\n  public get colors(): ReadonlyColorSet { return this._colors; }\n\n  private readonly _onChangeColors = this.register(new EventEmitter<ReadonlyColorSet>());\n  public readonly onChangeColors = this._onChangeColors.event;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache,\n      halfContrastCache: this._halfContrastCache\n    };\n    this._updateRestoreColors();\n    this._setTheme(this._optionsService.rawOptions.theme);\n\n    this.register(this._optionsService.onSpecificOptionChange('minimumContrastRatio', () => this._contrastCache.clear()));\n    this.register(this._optionsService.onSpecificOptionChange('theme', () => this._setTheme(this._optionsService.rawOptions.theme)));\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  private _setTheme(theme: ITheme = {}): void {\n    const colors = this._colors;\n    colors.foreground = parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    colors.background = parseColor(theme.background, DEFAULT_BACKGROUND);\n    colors.cursor = parseColor(theme.cursor, DEFAULT_CURSOR);\n    colors.cursorAccent = parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    colors.selectionBackgroundTransparent = parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    colors.selectionBackgroundOpaque = color.blend(colors.background, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundTransparent = parseColor(theme.selectionInactiveBackground, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundOpaque = color.blend(colors.background, colors.selectionInactiveBackgroundTransparent);\n    colors.selectionForeground = theme.selectionForeground ? parseColor(theme.selectionForeground, NULL_COLOR) : undefined;\n    if (colors.selectionForeground === NULL_COLOR) {\n      colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionBackgroundTransparent = color.opacity(colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionInactiveBackgroundTransparent = color.opacity(colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    colors.ansi[0] = parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    colors.ansi[1] = parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    colors.ansi[2] = parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    colors.ansi[3] = parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    colors.ansi[4] = parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    colors.ansi[5] = parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    colors.ansi[6] = parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    colors.ansi[7] = parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    colors.ansi[8] = parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    colors.ansi[9] = parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    colors.ansi[10] = parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    colors.ansi[11] = parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    colors.ansi[12] = parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    colors.ansi[13] = parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    colors.ansi[14] = parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    colors.ansi[15] = parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        colors.ansi[i + 16] = parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._halfContrastCache.clear();\n    this._updateRestoreColors();\n    this._onChangeColors.fire(this.colors);\n  }\n\n  public restoreColor(slot?: AllColorIndex): void {\n    this._restoreColor(slot);\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _restoreColor(slot: AllColorIndex | undefined): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this._colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case SpecialColorIndex.FOREGROUND:\n        this._colors.foreground = this._restoreColors.foreground;\n        break;\n      case SpecialColorIndex.BACKGROUND:\n        this._colors.background = this._restoreColors.background;\n        break;\n      case SpecialColorIndex.CURSOR:\n        this._colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this._colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  public modifyColors(callback: (colors: IColorSet) => void): void {\n    callback(this._colors);\n    // Assume the change happened\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this._colors.foreground,\n      background: this._colors.background,\n      cursor: this._colors.cursor,\n      ansi: this._colors.ansi.slice()\n    };\n  }\n}\n\nfunction parseColor(\n  cssString: string | undefined,\n  fallback: IColor\n): IColor {\n  if (cssString !== undefined) {\n    try {\n      return css.toColor(cssString);\n    } catch {\n      // no-op\n    }\n  }\n  return fallback;\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends Disposable implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public readonly onDeleteEmitter = this.register(new EventEmitter<IDeleteEvent>());\n  public readonly onDelete = this.onDeleteEmitter.event;\n  public readonly onInsertEmitter = this.register(new EventEmitter<IInsertEvent>());\n  public readonly onInsert = this.onInsertEmitter.event;\n  public readonly onTrimEmitter = this.register(new EventEmitter<number>());\n  public readonly onTrim = this.onTrimEmitter.event;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @returns The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @returns The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb',\n * '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsWrappingHeuristics = this.register(new MutableDisposable());\n\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  protected _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  protected readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  protected _onScroll = this.register(new EventEmitter<IScrollEvent, void>());\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = this.register(new EventEmitter<number, void>());\n      this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      });\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = this.register(new OptionsService(options));\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this.register(this._instantiationService.createInstance(LogService));\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this.register(this._instantiationService.createInstance(CoreMouseService));\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this.unicodeService = this.register(this._instantiationService.createInstance(UnicodeService));\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = this.register(new InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService));\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom()));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onMultipleOptionChange(['windowsMode', 'windowsPty'], () => this._handleWindowsPtyOptionChange()));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = this.register(new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult)));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used to avoid\n   * unwanted events being handled by the viewport when the event was triggered from the viewport\n   * originally.\n   * @param source Which component the event came from.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  public scrollToTop(): void {\n    this.scrollLines(-this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToBottom(): void {\n    this.scrollLines(this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this._bufferService.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    this._handleWindowsPtyOptionChange();\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n\n  private _handleWindowsPtyOptionChange(): void {\n    let value = false;\n    const windowsPty = this.optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber !== undefined && windowsPty.buildNumber !== undefined) {\n      value = !!(windowsPty.backend === 'conpty' && windowsPty.buildNumber < 21376);\n    } else if (this.optionsService.rawOptions.windowsMode) {\n      value = true;\n    }\n    if (value) {\n      this._enableWindowsWrappingHeuristics();\n    } else {\n      this._windowsWrappingHeuristics.clear();\n    }\n  }\n\n  protected _enableWindowsWrappingHeuristics(): void {\n    if (!this._windowsWrappingHeuristics.value) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsWrappingHeuristics.value = toDisposable(() => {\n        for (const d of disposables) {\n          d.dispose();\n        }\n      });\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    this.clearListeners();\n    this._disposed = true;\n  }\n\n  public clearListeners(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType, SpecialColorIndex } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { IParsingState, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via xterm-addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n// Work variables to avoid garbage collection\nlet $temp = 0;\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _dirtyRowTracker: IDirtyRowTracker;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private readonly _onRequestBell = this.register(new EventEmitter<void>());\n  public readonly onRequestBell = this._onRequestBell.event;\n  private readonly _onRequestRefreshRows = this.register(new EventEmitter<number, number>());\n  public readonly onRequestRefreshRows = this._onRequestRefreshRows.event;\n  private readonly _onRequestReset = this.register(new EventEmitter<void>());\n  public readonly onRequestReset = this._onRequestReset.event;\n  private readonly _onRequestSendFocus = this.register(new EventEmitter<void>());\n  public readonly onRequestSendFocus = this._onRequestSendFocus.event;\n  private readonly _onRequestSyncScrollBar = this.register(new EventEmitter<void>());\n  public readonly onRequestSyncScrollBar = this._onRequestSyncScrollBar.event;\n  private readonly _onRequestWindowsOptionsReport = this.register(new EventEmitter<WindowsOptionsReportType>());\n  public readonly onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event;\n\n  private readonly _onA11yChar = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yChar.event;\n  private readonly _onA11yTab = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTab.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onColor = this.register(new EventEmitter<IColorEvent>());\n  public readonly onColor = this._onColor.event;\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n    this._dirtyRowTracker = new DirtyRowTracker(this._bufferService);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  private _getCurrentLinkId(): number {\n    return this._curAttrData.extended.urlId;\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with same chunk and the promise\n   *   resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order\n   * and proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowTracker.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowTracker.start, this._dirtyRowTracker.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._getCurrentLinkId()) {\n        this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    } else {\n      // There was an explicit line feed (not just a carriage return), so clear the wrapped state of\n      // the line. This is particularly important on conpty/Windows where revisiting lines to\n      // reprint is common, especially on resize. Note that the windowsMode wrapped line heuristics\n      // can mess with this so windowsMode should be disabled, which is recommended on Windows build\n      // 21376 and above.\n      this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one\n        //   cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once\n          // before early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y The row index relative to the viewport.\n   * @param start The start x index of the range to be erased.\n   * @param end The end x index of the range to be erased (exclusive).\n   * @param clearWrap clear the isWrapped flag\n   * @param respectProtect Whether to respect the protection attribute (DECSCA).\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData(),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row. The cell gets replaced with the eraseChar of\n   * the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y);\n    if (line) {\n      line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n      this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowTracker.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the\n   * blank characters. Text between the cursor and right margin moves to the right. Characters moved\n   * past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to\n   * the left. Character attributes move with the characters. The terminal adds blank characters at\n   * the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll\n   * margins, moving content to the right. Content at the right margin is lost. DECIC has no effect\n   * outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty, the\n   * preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is\n   * set. REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_RESET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_SET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 67) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  private _processSGR0(attr: IAttributeData): void {\n    attr.fg = DEFAULT_ATTR_DATA.fg;\n    attr.bg = DEFAULT_ATTR_DATA.bg;\n    attr.extended = attr.extended.clone();\n    // Reset underline style and color. Note that we don't want to reset other\n    // fields such as the url id.\n    attr.extended.underlineStyle = UnderlineStyle.NONE;\n    attr.extended.underlineColor &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 53        | Overlined.                                               | #Y      |\n   * | 55        | Not Overlined.                                           | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58)\n   * as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._processSGR0(this._curAttrData);\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        this._processSGR0(attr);\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 53) {\n        // overline\n        attr.bg |= BgFlags.OVERLINE;\n      } else if (p === 55) {\n        // not overline\n        attr.bg &= ~BgFlags.OVERLINE;\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full\n   * terminal bootstrap, DECSTR only resets certain attributes. For most needs DECSTR should be\n   * sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event\n   * `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from\n   * `XParseColor` (see OSC 10 for supported formats). There may be multipe `c ; spec` pairs present\n   * in the same instruction. If `spec` contains `?` the terminal returns a sequence with the\n   * currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (isValidColorIndex(index)) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character.\n   * Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover\n   * feedback. Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._getCurrentLinkId()) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [SpecialColorIndex.FOREGROUND, SpecialColorIndex.BACKGROUND, SpecialColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (isValidColorIndex(index)) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowTracker.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the\n   * corresponding CSI string, `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    this._dirtyRowTracker.markRangeDirty(y1, y2);\n  }\n}\n\nexport interface IDirtyRowTracker {\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nclass DirtyRowTracker implements IDirtyRowTracker {\n  public start!: number;\n  public end!: number;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this.start = this._bufferService.buffer.y;\n    this.end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this.start) {\n      this.start = y;\n    } else if (y > this.end) {\n      this.end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      $temp = y1;\n      y1 = y2;\n      y2 = $temp;\n    }\n    if (y1 < this.start) {\n      this.start = y1;\n    }\n    if (y2 > this.end) {\n      this.end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n\nfunction isValidColorIndex(value: number): value is ColorIndex {\n  return 0 <= value && value < 256;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n  private _value?: T;\n  private _isDisposed = false;\n\n  /**\n   * Gets the value if it exists.\n   */\n  public get value(): T | undefined {\n    return this._isDisposed ? undefined : this._value;\n  }\n\n  /**\n   * Sets the value, disposing of the old value if it exists.\n   */\n  public set value(value: T | undefined) {\n    if (this._isDisposed || value === this._value) {\n      return;\n    }\n    this._value?.dispose();\n    this._value = value;\n  }\n\n  /**\n   * Resets the stored value and disposes of the previously stored value.\n   */\n  public clear(): void {\n    this.value = undefined;\n  }\n\n  public dispose(): void {\n    this._isDisposed = true;\n    this._value?.dispose();\n    this._value = undefined;\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// Work variables to avoid garbage collection.\nlet i = 0;\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    i = this._search(this._getKey(value));\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    i = this._search(key);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public forEachByKey(key: number, callback: (value: T) => void): void {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      callback(this._array[i]);\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    // Duplicate the array to avoid issues when _array changes while iterating\n    return [...this._array].values();\n  }\n\n  private _search(key: number): number {\n    let min = 0;\n    let max = this._array.length - 1;\n    while (max >= min) {\n      let mid = (min + max) >> 1;\n      const midKey = this._getKey(this._array[mid]);\n      if (midKey > key) {\n        max = mid - 1;\n      } else if (midKey < key) {\n        min = mid + 1;\n      } else {\n        // key in list, walk to lowest duplicate\n        while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n          mid--;\n        }\n        return mid;\n      }\n    }\n    // key not in list\n    // still return closest min (also used as insert position)\n    return min;\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n  public isOverline(): number      { return this.bg & BgFlags.OVERLINE; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IdleTaskQueue } from 'common/TaskQueue';\nimport { IAttributeData, IBufferLine, ICellData, ICharset } from 'common/Types';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { getWrappedLineTrimmedLength, reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths } from 'common/buffer/BufferReflow';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, WHITESPACE_CELL_WIDTH } from 'common/buffer/Constants';\nimport { Marker } from 'common/buffer/Marker';\nimport { IBuffer } from 'common/buffer/Types';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: { [column: number]: boolean | undefined } = {};\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // count bufferlines with overly big memory to be cleaned afterwards\n    let dirtyMemoryLines = 0;\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode || this._optionsService.rawOptions.windowsPty.backend !== undefined || this._optionsService.rawOptions.windowsPty.buildNumber !== undefined) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n\n    this._memoryCleanupQueue.clear();\n    // schedule memory cleanup only, if more than 10% of the lines are affected\n    if (dirtyMemoryLines > 0.1 * this.lines.length) {\n      this._memoryCleanupPosition = 0;\n      this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup());\n    }\n  }\n\n  private _memoryCleanupQueue = new IdleTaskQueue();\n  private _memoryCleanupPosition = 0;\n\n  private _batchedMemoryCleanup(): boolean {\n    let normalRun = true;\n    if (this._memoryCleanupPosition >= this.lines.length) {\n      // cleanup made it once through all lines, thus rescan in loop below to also catch shifted\n      // lines, which should finish rather quick if there are no more cleanups pending\n      this._memoryCleanupPosition = 0;\n      normalRun = false;\n    }\n    let counted = 0;\n    while (this._memoryCleanupPosition < this.lines.length) {\n      counted += this.lines.get(this._memoryCleanupPosition++)!.cleanupMemory();\n      // cleanup max 100 lines per batch\n      if (counted > 100) {\n        return true;\n      }\n    }\n    // normal runs always need another rescan afterwards\n    // if we made it here with normalRun=false, we are in a final run\n    // and can end the cleanup task for sure\n    return normalRun;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    const windowsPty = this._optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber) {\n      return this._hasScrollback && windowsPty.backend === 'conpty' && windowsPty.buildNumber >= 21376;\n    }\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The absolute index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IAttributeData, IBufferLine, ICellData, IExtendedAttrs } from 'common/Types';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { CellData } from 'common/buffer/CellData';\nimport { Attributes, BgFlags, CHAR_DATA_ATTR_INDEX, CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, Content, NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR } from 'common/buffer/Constants';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n// Work variables to avoid garbage collection\nlet $startIndex = 0;\n\n/** Factor when to cleanup underlying array buffer after shrinking. */\nconst CLEANUP_THRESHOLD = 2;\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    $startIndex = index * CELL_SIZE;\n    cell.content = this._data[$startIndex + Cell.CONTENT];\n    cell.fg = this._data[$startIndex + Cell.FG];\n    cell.bg = this._data[$startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  /**\n   * Resize BufferLine to `cols` filling excess cells with `fillCellData`.\n   * The underlying array buffer will not change if there is still enough space\n   * to hold the new buffer line data.\n   * Returns a boolean indicating, whether a `cleanupMemory` call would free\n   * excess memory (true after shrinking > CLEANUP_THRESHOLD).\n   */\n  public resize(cols: number, fillCellData: ICellData): boolean {\n    if (cols === this.length) {\n      return this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n    }\n    const uint32Cells = cols * CELL_SIZE;\n    if (cols > this.length) {\n      if (this._data.buffer.byteLength >= uint32Cells * 4) {\n        // optimization: avoid alloc and data copy if buffer has enough room\n        this._data = new Uint32Array(this._data.buffer, 0, uint32Cells);\n      } else {\n        // slow path: new alloc and full data copy\n        const data = new Uint32Array(uint32Cells);\n        data.set(this._data);\n        this._data = data;\n      }\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      // optimization: just shrink the view on existing buffer\n      this._data = this._data.subarray(0, uint32Cells);\n      // Remove any cut off combined data\n      const keys = Object.keys(this._combined);\n      for (let i = 0; i < keys.length; i++) {\n        const key = parseInt(keys[i], 10);\n        if (key >= cols) {\n          delete this._combined[key];\n        }\n      }\n      // remove any cut off extended attributes\n      const extKeys = Object.keys(this._extendedAttrs);\n      for (let i = 0; i < extKeys.length; i++) {\n        const key = parseInt(extKeys[i], 10);\n        if (key >= cols) {\n          delete this._extendedAttrs[key];\n        }\n      }\n    }\n    this.length = cols;\n    return uint32Cells * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n  }\n\n  /**\n   * Cleanup underlying array buffer.\n   * A cleanup will be triggered if the array buffer exceeds the actual used\n   * memory by a factor of CLEANUP_THRESHOLD.\n   * Returns 0 or 1 indicating whether a cleanup happened.\n   */\n  public cleanupMemory(): number {\n    if (this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength) {\n      const data = new Uint32Array(this._data.length);\n      data.set(this._data);\n      this._data = data;\n      return 1;\n    }\n    return 0;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public getNoBgTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK) || (this._data[i * CELL_SIZE + Cell.BG] & Attributes.CM_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param oldCols The columns before resize\n * @param newCols The columns after resize.\n * @param bufferAbsoluteY The absolute y position of the cursor (baseY + cursorY).\n * @param nullCell The cell data to use when filling in empty cells.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private readonly _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public readonly onBufferActivate = this._onBufferActivate.event;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.resize(this._bufferService.cols, this._bufferService.rows)));\n    this.register(this._optionsService.onSpecificOptionChange('tabStopWidth', () => this.setupTabStops()));\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n    this.setupTabStops(newCols);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000,\n  OVERLINE = 0x40000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { disposeArray } from 'common/Lifecycle';\nimport { IDisposable, IMarker } from 'common/Types';\n\nexport class Marker implements IMarker {\n  private static _nextId = 1;\n\n  public isDisposed: boolean = false;\n  private readonly _disposables: IDisposable[] = [];\n\n  private readonly _id: number = Marker._nextId++;\n  public get id(): number { return this._id; }\n\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  constructor(\n    public line: number\n  ) {\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    disposeArray(this._disposables);\n    this._disposables.length = 0;\n  }\n\n  public register<T extends IDisposable>(disposable: T): T {\n    this._disposables.push(disposable);\n    return disposable;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.keyCode === 32) {\n          result.key = C0.ESC + (ev.ctrlKey ? C0.NUL : ' ');\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock,\n        // volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate\n      // pair conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      table.fill(1);\n      table[0] = 0;\n      // control chars\n      table.fill(0, 1, 32);\n      table.fill(0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      table.fill(2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      table.fill(2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      table.fill(2, 0xac00, 0xd7a4);\n      table.fill(2, 0xf900, 0xfb00);\n      table.fill(2, 0xfe10, 0xfe1a);\n      table.fill(2, 0xfe30, 0xfe70);\n      table.fill(2, 0xff00, 0xff61);\n      table.fill(2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        table.fill(0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer extends Disposable {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n\n  private readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) {\n    super();\n  }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately to minimize input latency,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens\n         * took very long). This cannot be solved here for the handler itself (it is the handlers\n         * responsibility to slice hard work), but we can at least schedule a screen update as we\n         * gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n * Internal actions of EscapeSequenceParser.\n */\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    this.table.fill(action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected readonly _oscParser: IOscParser;\n  protected readonly _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this.register(toDisposable(() => {\n      this._csiHandlers = Object.create(null);\n      this._executeHandlers = Object.create(null);\n      this._escHandlers = Object.create(null);\n    }));\n    this._oscParser = this.register(new OscParser());\n    this._dcsParser = this.register(new DcsParser());\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing. This is a really bad\n           * condition with screwed up execution order and prolly messed up terminal state,\n           * therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that, as\n           * the pending async handler still might mess up the terminal later. Instead fix the\n           * faulty async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport class BufferNamespaceApi extends Disposable implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n\n  private readonly _onBufferChange = this.register(new EventEmitter<IBufferApi>());\n  public readonly onBufferChange = this._onBufferChange.event;\n\n  constructor(private _core: ICoreTerminal) {\n    super();\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = this.register(new BufferSet(optionsService, this));\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    // TODO: This doesn't fire when scrollback changes - add a resize event to BufferSet and forward\n    //       event\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService extends Disposable implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  private readonly _onProtocolChange = this.register(new EventEmitter<CoreMouseEventType>());\n  public readonly onProtocolChange =  this._onProtocolChange.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    super();\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { clone } from 'common/Clone';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { IBufferService, ICoreService, ILogService, IOptionsService } from 'common/services/Services';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  private readonly _onUserInput = this.register(new EventEmitter<void>());\n  public readonly onUserInput = this._onUserInput.event;\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onRequestScrollToBottom = this.register(new EventEmitter<void>());\n  public readonly onRequestScrollToBottom = this._onRequestScrollToBottom.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (wasUserInput && this._optionsService.rawOptions.scrollOnUserInput && buffer.ybase !== buffer.ydisp) {\n      this._onRequestScrollToBottom.fire();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecoration, IDecorationOptions, IMarker } from 'xterm';\n\n// Work variables to avoid garbage collection\nlet $xmin = 0;\nlet $xmax = 0;\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private readonly _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRegistered = this._onDecorationRegistered.event;\n  private readonly _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRemoved = this._onDecorationRemoved.event;\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n\n    this.register(toDisposable(() => this.reset()));\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void {\n    this._decorations.forEachByKey(line, d => {\n      $xmin = d.options.x ?? 0;\n      $xmax = $xmin + (d.options.width ?? 1);\n      if (x >= $xmin && x < $xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        callback(d);\n      }\n    });\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public get isDisposed(): boolean { return this._isDisposed; }\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    for (const [key, value] of this._entries.entries()) {\n      callback(key, value);\n    }\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  trace: LogLevelEnum.TRACE,\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  private _logLevel: LogLevelEnum = LogLevelEnum.OFF;\n  public get logLevel(): LogLevelEnum { return this._logLevel; }\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n\n    // For trace logging, assume the latest created log service is valid\n    traceLogger = this;\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, (this._optionsService.options.logger ? '' : LOG_PREFIX) + message, ...optionalParams);\n  }\n\n  public trace(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.TRACE) {\n      this._log(this._optionsService.options.logger?.trace.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.DEBUG) {\n      this._log(this._optionsService.options.logger?.debug.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.INFO) {\n      this._log(this._optionsService.options.logger?.info.bind(this._optionsService.options.logger) ?? console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.WARN) {\n      this._log(this._optionsService.options.logger?.warn.bind(this._optionsService.options.logger) ?? console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.ERROR) {\n      this._log(this._optionsService.options.logger?.error.bind(this._optionsService.options.logger) ?? console.error, message, optionalParams);\n    }\n  }\n}\n\nlet traceLogger: ILogService;\nexport function setTraceLogger(logger: ILogService): void {\n  traceLogger = logger;\n}\n\n/**\n * A decorator that can be used to automatically log trace calls to the decorated function.\n */\nexport function traceCall(_target: any, key: string, descriptor: any): any {\n  if (typeof descriptor.value !== 'function') {\n    throw new Error('not supported');\n  }\n  const fnKey = 'value';\n  const fn = descriptor.value;\n  descriptor[fnKey] = function (...args: any[]) {\n    // Early exit\n    if (traceLogger.logLevel !== LogLevelEnum.TRACE) {\n      return fn.apply(this, args);\n    }\n\n    traceLogger.trace(`GlyphRenderer#${fn.name}(${args.map(e => JSON.stringify(e)).join(', ')})`);\n    const result = fn.apply(this, args);\n    traceLogger.trace(`GlyphRenderer#${fn.name} return`, result);\n    return result;\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle, IDisposable } from 'common/Types';\nimport { FontWeight, IOptionsService, ITerminalOptions } from 'common/services/Services';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  cursorInactiveStyle: 'outline',\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  ignoreBracketedPasteMode: false,\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  logger: null,\n  scrollback: 1000,\n  scrollOnUserInput: true,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  windowsPty: {},\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService extends Disposable implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private readonly _onOptionChange = this.register(new EventEmitter<keyof ITerminalOptions>());\n  public readonly onOptionChange = this._onOptionChange.event;\n\n  constructor(options: Partial<ITerminalOptions>) {\n    super();\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (value: ITerminalOptions[T]) => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (eventKey === key) {\n        listener(this.rawOptions[key]);\n      }\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (keys.indexOf(eventKey) !== -1) {\n        listener();\n      }\n    });\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n      case 'windowsPty':\n        value = value ?? {};\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, CursorInactiveStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler, IWindowsPty, ILogger } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<TArgs extends any[]> = TArgs extends [] ? []\n  : TArgs extends [...infer TFirst, infer TLast] ? TLast extends IBrandedService ? GetLeadingNonServiceArgs<TFirst> : TArgs\n    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  TRACE = 0,\n  DEBUG = 1,\n  INFO = 2,\n  WARN = 3,\n  ERROR = 4,\n  OFF = 5\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  readonly logLevel: LogLevelEnum;\n\n  trace(message: any, ...optionalParams: any[]): void;\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  cursorInactiveStyle?: CursorInactiveStyle;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  ignoreBracketedPasteMode?: boolean;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  logger?: ILogger | null;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowsPty?: IWindowsPty;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { EventEmitter } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n\n  private readonly _onChange = new EventEmitter<string>();\n  public readonly onChange = this._onChange.event;\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public dispose(): void {\n    this._onChange.dispose();\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ITerminalOptions } from 'common/Types';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { IBufferNamespace as IBufferNamespaceApi, IDecoration, IDecorationOptions, IDisposable, ILinkProvider, ILocalizableStrings, IMarker, IModes, IParser, ITerminalAddon, Terminal as ITerminalApi, ITerminalInitOnlyOptions, IUnicodeHandling } from 'xterm';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal extends Disposable implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions & ITerminalInitOnlyOptions) {\n    super();\n\n    this._core = this.register(new TerminalCore(options));\n    this._addonManager = this.register(new AddonManager());\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    if (!this._buffer) {\n      this._buffer = this.register(new BufferNamespaceApi(this._core));\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.registerMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    super.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n"],"names":["self","module","exports","e","t","i","s","__decorate","r","n","arguments","length","o","Object","getOwnPropertyDescriptor","Reflect","decorate","a","defineProperty","__param","value","AccessibilityManager","h","c","l","d","Disposable","constructor","_terminal","super","_renderService","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","this","_accessibilityContainer","document","createElement","classList","add","_rowContainer","setAttribute","_rowElements","rows","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","_handleBoundaryFocus","_bottomBoundaryFocusListener","addEventListener","_refreshRowsDimensions","_liveRegion","_liveRegionDebouncer","register","TimeBasedDebouncer","_renderRows","bind","element","insertAdjacentElement","onResize","_handleResize","onRender","_refreshRows","start","end","onScroll","onA11yChar","char","_handleChar","onLineFeed","onA11yTab","spaceCount","_handleTab","onKey","_handleKey","key","onBlur","_clearLiveRegion","onDimensionsChange","_screenDprMonitor","ScreenDprMonitor","window","setListener","addDisposableDomListener","toDisposable","remove","MAX_ROWS_TO_READ","shift","textContent","Strings","tooMuchOutput","isMac","parentNode","setTimeout","keyChar","test","push","refresh","buffer","setSize","lines","toString","lineData","translateBufferLineToString","ydisp","posInSet","innerText","_announceCharacters","position","topBoundaryElement","bottomBoundaryElement","boundaryElement","target","beforeBoundaryElement","getAttribute","relatedTarget","pop","removeChild","removeEventListener","newElement","unshift","scrollLines","focus","preventDefault","stopImmediatePropagation","children","tabIndex","_refreshRowDimensions","dimensions","css","cell","height","style","width","canvas","IRenderService","prepareTextForTerminal","text","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","optionsService","decPrivateModes","rawOptions","ignoreBracketedPasteMode","triggerDataEvent","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","zIndex","rightClickHandler","handlePasteEvent","copyHandler","selectionService","clipboardData","setData","selectionText","stopPropagation","getData","shouldSelectWord","rightClickSelect","select","ColorContrastCache","_color","TwoKeyMap","_css","setCss","bg","fg","set","getCss","get","setColor","getColor","clear","node","type","handler","options","disposed","dispose","Linkifier2","currentLink","_currentLink","_bufferService","_linkProviders","_linkCacheDisposables","_isMouseOut","_wasResized","_activeLine","_onShowLinkUnderline","EventEmitter","onShowLinkUnderline","event","_onHideLinkUnderline","onHideLinkUnderline","getDisposeArrayDisposable","_lastMouseEvent","undefined","_clearCurrentLink","registerLinkProvider","linkProvider","providerIndex","indexOf","splice","attachToDom","mouseService","renderService","_element","_mouseService","_handleMouseMove","_handleMouseDown","_handleMouseUp","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","x","y","_handleHover","_askForLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","forEach","reply","linkWithState","Map","linkProvided","entries","_checkLinkProviderResult","provideLinks","links","linksWithState","map","size","_removeIntersectingLinks","replies","occupiedCells","Set","providerReply","startX","range","endX","cols","has","index","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","_mouseDownLink","activate","startRow","endRow","_linkLeave","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","defineProperties","v","toggle","_fireUnderlineEvent","onRenderedViewportChange","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","fire","leave","lower","upper","current","coords","getCoords","x1","y1","x2","y2","IBufferService","promptLabel","OscLinkProvider","_optionsService","_oscLinkService","callback","line","result","linkHandler","CellData","lineLength","getTrimmedLength","currentLinkId","currentStart","finishLink","hasContent","loadCell","hasExtendedAttrs","extended","urlId","getLinkData","uri","ignoreLink","allowNonHttpProtocols","parsed","URL","includes","protocol","defaultActivate","confirm","newWindow","open","opener","location","href","console","warn","call","IOptionsService","IOscLinkService","RenderDebouncer","_parentWindow","_renderCallback","_refreshCallbacks","_animationFrame","cancelAnimationFrame","addRefreshCallback","requestAnimationFrame","_innerRefresh","rowStart","rowEnd","rowCount","_rowCount","_rowStart","Math","min","_rowEnd","max","_runRefreshCallbacks","_currentDevicePixelRatio","devicePixelRatio","clearListener","listener","_listener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","Terminal","_","u","f","p","g","m","S","C","b","w","E","k","L","D","R","A","B","T","M","CoreTerminal","onFocus","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","onWillOpen","_onWillOpen","browser","Browser","_keyDownHandled","_keyDownSeen","_keyPressHandled","_unprocessedDeadKey","_accessibilityManager","MutableDisposable","_onCursorMove","onCursorMove","_onKey","_onRender","_onSelectionChange","onSelectionChange","_onTitleChange","onTitleChange","_onBell","onBell","_setup","linkifier2","_instantiationService","createInstance","_decorationService","DecorationService","setService","IDecorationService","_inputHandler","onRequestBell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","_afterResize","_customKeyEventHandler","_themeService","req","acc","ident","channels","color","toColorRGB","colors","ansi","C0","ESC","toRgbString","C1_ESCAPED","ST","modifyColors","rgba","toColor","narrowedAcc","restoreColor","buffers","active","preventScroll","_handleScreenReaderModeOptionChange","_handleTextAreaFocus","sendFocus","updateCursorStyle","_showCursor","blur","_handleTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cursorY","ybase","bufferLine","cursorX","cellHeight","getWidth","cellWidth","cursorTop","cursorLeft","lineHeight","_initGlobal","_bindKeys","hasSelection","_selectionService","pasteHandlerWrapper","isFirefox","button","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","parent","isConnected","_logService","debug","_document","ownerDocument","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","isChromeOS","_coreBrowserService","CoreBrowserService","defaultView","ICoreBrowserService","_charSizeService","CharSizeService","ICharSizeService","ThemeService","IThemeService","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","RenderService","resize","_compositionView","CompositionHelper","hasRenderer","setRenderer","_createRenderer","MouseService","IMouseService","viewport","Viewport","onRequestScrollLines","amount","suppressScrollEvent","onRequestSyncScrollBar","syncScrollArea","handleCursorMove","handleResize","handleBlur","handleFocus","SelectionService","ISelectionService","onRequestRedraw","handleSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","BufferDecorationRenderer","handleMouseDown","coreMouseService","areMouseEventsActive","disable","enable","screenReaderMode","onSpecificOptionChange","overviewRulerWidth","_overviewRulerRenderer","OverviewRulerRenderer","measure","bindMouse","DomRenderer","el","sendEvent","but","action","getMouseReportCoords","overrideType","buttons","getLinesScrolled","deltaY","triggerMouseEvent","col","row","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","sequence","applicationCursorKeys","data","abs","handleWheel","handleTouchStart","handleTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","source","attachCustomKeyEventHandler","customKeyEventHandler","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","deregister","markers","registerMarker","cursorYOffset","addMarker","registerDecoration","decorationOptions","column","setSelection","getSelection","getSelectionPosition","selectionStart","selectionEnd","clearSelection","selectAll","selectLines","shouldIgnoreComposition","macOptionIsMeta","keydown","scrollOnUserInput","scrollToBottom","evaluateKeyboardEvent","scrollCount","_isThirdLevelShift","metaKey","charCodeAt","ETX","CR","domEvent","thirdLevelKey","isWindows","getModifierState","keyCode","charCode","which","String","fromCharCode","inputType","composed","hasValidSize","clearAllMarkers","getBlankLine","DEFAULT_ATTR_DATA","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","toFixed","canvasHeight","GET_CELL_SIZE_PIXELS","force","cancelEvents","P","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","clearTimeout","refreshRequestTime","Date","now","elapsed","waitPeriodBeforeTrailingRefresh","_scrollArea","themeService","scrollBarWidth","_currentRowHeight","_currentDeviceCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","_smoothScrollState","startTime","origin","_onRequestScrollLines","offsetWidth","_handleScroll","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","_handleThemeChange","onChangeColors","backgroundColor","background","_refresh","immediate","device","dpr","offsetHeight","newBufferHeight","round","scrollTop","offsetParent","diff","_smoothScroll","_isDisposed","percent","_smoothScrollPercent","_clearSmoothScrollState","smoothScrollDuration","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","scrollHeight","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","getBufferElements","startLine","endLine","cursorElement","currentLine","bufferElements","isWrapped","translateToString","div","DOM_DELTA_PIXEL","floor","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","pageY","_screenElement","_decorationElements","_altBufferIsActive","_dimensionsChanged","_container","_doRefreshDecorations","_queueRefresh","onDecorationRegistered","onDecorationRemoved","decoration","_removeDecoration","_renderDecoration","_refreshStyle","_refreshXPosition","_createElement","layer","marker","display","onRenderEmitter","onDispose","delete","anchor","right","ColorZoneStore","_zones","_zonePool","_zonePoolIndex","_linePadding","full","center","zones","addDecoration","overviewRulerOptions","z","_lineIntersectsZone","_lineAdjacentToZone","_addLineToZone","startBufferLine","endBufferLine","setPadding","padding","zone","drawHeight","drawWidth","drawX","_width","_coreBrowseService","_colorZoneStore","_shouldUpdateDimensions","_shouldUpdateAnchor","_lastKnownBufferLength","_canvas","_refreshCanvasDimensions","parentElement","insertBefore","ctx","getContext","_ctx","_registerDecorationListeners","_registerBufferChangeListeners","_registerDimensionChangeListeners","normal","_refreshDrawHeightConstants","_refreshColorZonePadding","_containerHeight","clientHeight","_refreshDrawConstants","outerWidth","innerWidth","ceil","pixelsPerLine","nonFullHeight","_refreshDecorations","clearRect","lineWidth","_renderColorZone","fillStyle","fillRect","updateCanvasDimensions","updateAnchor","_isComposing","_textarea","_coreService","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","currentCompositionPosition","input","substring","oldValue","newValue","DEL","dontRecurse","fontFamily","fontSize","compositionViewBounds","ICoreService","getCoordsRelativeToElement","rect","elementStyle","getComputedStyle","leftPadding","parseInt","getPropertyValue","topPadding","colCount","hasValidCharSize","cssCellWidth","cssCellHeight","isSelection","moveToCellSequence","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","rowsToMove","wrappedRows","direction","repeat","currentRow","lineWraps","startCol","endCol","forward","currentCol","bufferStr","count","str","rpt","targetX","currX","rowDifference","TERMINAL_CLASS_PREFIX","ROW_CONTAINER_CLASS","FG_CLASS_PREFIX","BG_CLASS_PREFIX","FOCUS_CLASS","SELECTION_CLASS","nextTerminalId","_linkifier2","instantiationService","_terminalClass","_refreshRowElements","_selectionContainer","createRenderDimensions","_updateDimensions","onOptionChange","_handleOptionsChanged","_injectCss","_rowFactory","DomRendererRowFactory","_handleLinkHover","_handleLinkLeave","_widthCache","_themeStyleElement","_dimensionsStyleElement","WidthCache","setFont","fontWeight","fontWeightBold","_setDefaultSpacing","letterSpacing","overflow","styles","_terminalSelector","foreground","multiplyOpacity","cursor","cursorAccent","cursorWidth","selectionBackgroundOpaque","selectionInactiveBackgroundOpaque","INVERTED_DEFAULT_COLOR","opaque","spacing","defaultSpacing","handleDevicePixelRatioChange","handleCharSizeChanged","renderRows","replaceChildren","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","documentFragment","isXFlipped","_createSelectionElement","middleRowsCount","colStart","colEnd","cursorAbsoluteY","cursorBlink","cursorStyle","cursorInactiveStyle","rowElement","createRow","_setCellUnderline","enabled","maxY","bufferline","IInstantiationService","_workCell","_columnSelectMode","_selectionStart","_selectionEnd","isCursorRow","widthCache","linkStart","linkEnd","elements","joinedRanges","getJoinedCharacters","charElement","getNoBgTrimmedLength","cellAmount","oldBg","oldFg","oldExt","oldLinkHover","oldSpacing","oldIsInSelection","classes","hasHover","isJoined","lastCharX","JoinedCellData","isInSelection","_isCellInSelection","isCursorCell","isLinkHover","isDecorated","forEachDecorationAtCell","chars","getChars","WHITESPACE_CELL_CHAR","isUnderline","isOverline","isBold","isItalic","selectionForeground","ext","isCursorHidden","isFocused","isDim","isInvisible","underlineStyle","isUnderlineColorDefault","isUnderlineColorRGB","textDecorationColor","AttributeData","getUnderlineColor","join","drawBoldTextInBrightColors","isStrikethrough","textDecoration","getFgColor","fgColorMode","getFgColorMode","getBgColor","bgColorMode","getBgColorMode","isInverse","temp","temp2","bgOverride","fgOverride","resolvedBg","isTop","backgroundColorRGB","foregroundColorRGB","_addStyle","padStart","_applyMinimumContrast","$","className","adjustedColor","minimumContrastRatio","excludeFromContrastRatioDemands","getCode","cache","_getContrastCache","ratio","ensureContrastRatio","halfContrastCache","contrastCache","padChar","_flat","Float32Array","_font","_fontSize","_weight","_weightBold","_measureElements","whiteSpace","fontKerning","regular","bold","italic","fontStyle","boldItalic","body","_holey","fill","font","weight","weightBold","cp","_measure","variant","TEXT_BASELINE","DIM_OPACITY","isLegacyEdge","isPowerlineGlyph","codepoint","isRestrictedPowerlineGlyph","throwIfFalsy","SelectionModel","isSelectAllActive","selectionStartLength","finalSelectionStart","areSelectionValuesReversed","finalSelectionEnd","startPlusLength","handleTrim","_onCharSizeChange","onCharSizeChange","_measureStrategy","DomMeasureStrategy","onMultipleOptionChange","_parentElement","_result","_measureElement","geometry","Number","firstCell","content","combinedData","isCombined","setFromCharData","getAsCharData","_characterJoiners","_nextCharacterJoinerId","joiner","id","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","getFg","rangeAttrBG","getBg","_getJoinedRanges","startIndex","endIndex","allJoinedRanges","error","joinerRanges","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","getString","newRange","inRange","_isFocused","_cachedIsFocused","hasFocus","queueMicrotask","_renderer","decorationService","coreBrowserService","_pausedResizeTask","DebouncedIdleTask","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRenderedViewportChange","_onRefreshRequest","onRefreshRequest","_renderDebouncer","_fullRefresh","observer","IntersectionObserver","_handleIntersectionChange","threshold","observe","disconnect","entry","isIntersecting","intersectionRatio","flush","isRedrawOnly","_fireOnCanvasResize","renderer","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","_linkifier","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_mouseMoveListener","_mouseUpListener","onUserInput","_trimListener","onTrim","_handleTrim","_handleBufferActivate","_model","_activeSelectionMode","_removeMouseDownListeners","lineText","startRowEndCol","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","isCellInSelection","_selectWordAtCursor","allowWhitespaceOnlySelection","getRangeLength","_selectWordAt","_getMouseEventScrollAmount","offset","terminalHeight","macOptionClickForcesSelection","timeStamp","_handleIncrementalClick","detail","_handleSingleClick","_handleDoubleClick","_handleTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","setInterval","_dragScroll","clearInterval","hasWidth","_selectLineAt","previousSelectionEnd","_selectToWordAt","timeElapsed","altClickMovesCursor","coordinates","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","charIndex","_getWordAt","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","slice","trim","getCodePoint","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","wrappedRange","getWrappedRangeForLine","first","last","createDecorator","DEFAULT_ANSI_COLORS","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","freeze","toCss","toRgba","_colors","_contrastCache","_halfContrastCache","_onChangeColors","selectionBackgroundTransparent","blend","selectionInactiveBackgroundTransparent","_updateRestoreColors","_setTheme","theme","parseColor","selectionBackground","selectionInactiveBackground","NULL_COLOR","isOpaque","opacity","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","extendedAnsi","colorCount","slot","_restoreColor","_restoreColors","cssString","fallback","CircularList","_maxLength","onDeleteEmitter","onDelete","onInsertEmitter","onInsert","onTrimEmitter","_array","_startIndex","_length","maxLength","newMaxLength","newArray","_getCyclicIndex","newLength","recycle","isFull","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","clone","val","depth","clonedObject","Array","isArray","rgb","contrastRatio","toPaddedHex","$r","$g","$b","$a","l1","l2","toChannels","fgR","fgG","fgB","bgR","bgG","bgB","rgbaColor","factor","$ctx","$litmusColor","isNode","willReadFrequently","globalCompositeOperation","createLinearGradient","match","rgbaMatch","parseFloat","getImageData","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","bgRgba","fgRgba","cr","increaseLuminance","bgL","fgL","resultA","resultARatio","resultB","hasWriteSyncWarnHappened","_onScrollApi","_windowsWrappingHeuristics","_onBinary","onBinary","_onData","onData","_onLineFeed","_onResize","_onWriteParsed","onWriteParsed","InstantiationService","OptionsService","BufferService","LogService","ILogService","CoreService","CoreMouseService","ICoreMouseService","unicodeService","UnicodeService","IUnicodeService","_charsetService","CharsetService","ICharsetService","OscLinkService","InputHandler","onRequestScrollToBottom","_writeBuffer","handleUserInput","_handleWindowsPtyOptionChange","markRangeDirty","scrollBottom","WriteBuffer","promiseResult","parse","write","writeSync","maxSubsequentCalls","LogLevelEnum","WARN","isNaN","MINIMUM_COLS","MINIMUM_ROWS","scroll","eraseAttr","scrollPages","pageCount","scrollToTop","scrollToLine","scrollAmount","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsPty","buildNumber","backend","windowsMode","_enableWindowsWrappingHeuristics","disposables","updateWindowsModeWrappedState","final","_listeners","_disposed","_event","arg1","arg2","queue","clearListeners","from","to","GLEVEL","paramToWindowOption","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","$temp","getAttrData","_curAttrData","_coreMouseService","_unicodeService","_parser","EscapeSequenceParser","flag","_parseBuffer","Uint32Array","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","_dirtyRowTracker","DirtyRowTracker","setCsiHandlerFallback","params","identifier","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","code","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","selectProtected","requestMode","setExecuteHandler","BEL","bell","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","nextLine","HTS","tabSet","OscHandler","setTitle","setIconName","setOrReportIndexedColor","setHyperlink","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","CHARSETS","selectCharset","screenAlignmentPattern","setErrorHandler","DcsHandler","requestStatusString","_preserveStack","_logSlowResolvingAsync","Promise","race","res","rej","catch","err","_getCurrentLinkId","wasPaused","MAX_PARSEBUFFER_LENGTH","DEBUG","prototype","split","clearRange","len","decode","subarray","chWidth","charset","wraparoundMode","wraparound","insertMode","modes","curAttr","bufferRow","markDirty","setCellFromCodePoint","wcwidth","ch","stringFromCodePoint","addLineToLink","_eraseAttrData","insertCells","getNullCell","NULL_CELL_CODE","NULL_CELL_WIDTH","addCodepointToCell","precedingCodepoint","convertEol","reverseWraparound","_restrictCursor","originalX","nextStop","maxCol","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","respectProtect","replaceCells","_resetBufferLine","clearMarkers","scrollBackSize","scrollBottomRowsOffset","scrollBottomAbsolute","deleteCells","_is","term","termName","setgCharset","DEFAULT_CHARSET","applicationKeypad","activeEncoding","activateAltBuffer","activateNormalBuffer","dm","mouseProtocol","mouseEncoding","cs","b2v","_updateAttrColor","mode","c1","c2","c3","fromColorRGB","_extractColor","attr","accu","cSpace","advance","hasSubParams","subparams","getSubParams","underlineColor","_processUnderline","updateExtended","_processSGR0","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","slots","idx","spec","exec","isValidColorIndex","args","_createHyperlink","_finishHyperlink","parsedParams","idParamIndex","findIndex","startsWith","registerLink","_setOrReportSpecialColor","collectAndFlag","scrollRegionHeight","level","yOffset","markAllDirty","isProtected","block","bar","_disposables","unregister","_value","array","FourKeyMap","_data","third","fourth","isIphone","isIpad","getSafariVersion","isSafari","navigator","userAgent","platform","majorVersion","SortedList","_getKey","insert","_search","getKeyIterator","forEachByKey","values","mid","midKey","IdleTaskQueue","PriorityTaskQueue","TaskQueue","_tasks","_i","enqueue","task","_start","_idleCallback","_cancelCallback","_requestCallback","_process","deadline","taskDuration","longestTask","lastDeadlineRemaining","timeRemaining","deadlineRemaining","_createDeadline","duration","requestIdleCallback","cancelIdleCallback","_queue","lastChar","CHAR_DATA_CODE_INDEX","WHITESPACE_CELL_CODE","ExtendedAttrs","newObj","isBlink","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","isEmpty","getUnderlineColorMode","isUnderlineColorPalette","getUnderlineStyle","_urlId","_ext","Buffer","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_isClearing","_memoryCleanupQueue","_memoryCleanupPosition","_cols","_rows","_getCorrectBufferLength","setupTabStops","getWhitespaceCell","BufferLine","relativeY","correctBufferLength","scrollback","fillViewportRows","fillAttr","newCols","newRows","nullCell","dirtyMemoryLines","addToY","amountToTrim","_isReflowEnabled","_reflow","_batchedMemoryCleanup","normalRun","counted","cleanupMemory","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","trimmedLines","wrappedLines","absoluteY","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","newLines","newLine","destLineIndex","destCol","srcLineIndex","srcCol","cellsToCopy","copyCellsFrom","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","lineIndex","trimRight","tabStopWidth","Marker","_removeMarker","$startIndex","fillCellData","_combined","_extendedAttrs","CHAR_DATA_ATTR_INDEX","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","codePoint","eAttrs","byteLength","uint32Cells","keys","extKeys","copyFrom","src","applyInReverse","srcData","srcCombinedKeys","bufferCols","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","BufferSet","_onBufferActivate","_normal","_alt","inactiveBuffer","obj","combined","DEFAULT_EXT","DEFAULT_ATTR","DEFAULT_COLOR","_id","isDisposed","_nextId","_onDispose","disposable","q","Q","K","Y","Z","H","NUL","SOH","STX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","OSC","PM","APC","KEYCODE_KEY_MAPPINGS","applicationCursorMode","modifiers","keyMapping","keyString","toUpperCase","toLowerCase","utf32ToString","_interim","startPos","interim","Uint8Array","byte1","byte2","byte3","byte4","discardInterim","tmp","missing","fourStop","table","UnicodeV6","BMP_COMBINING","HIGH_COMBINING","version","num","ucs","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","_didUserInput","chunk","cb","_innerWrite","lastTime","continuation","resolve","then","RGB_REX","HASH_REX","pad","bits","s2","low","base","adv","PAYLOAD_LIMIT","DcsParser","EMPTY_HANDLERS","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","handlerList","handlerIndex","clearHandler","setHandlerFallback","unhook","hook","put","success","handlerResult","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","VT500_TRANSITION_TABLE","TransitionTable","setDefault","next","addMany","codes","blueprint","apply","unused","PRINTABLES","EXECUTABLES","states","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","NON_ASCII_PRINTABLE","collect","abort","addSubParam","addDigit","handlersEsc","jj","_state","_put","fromArray","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","newParams","getSubParamsAll","store","cur","AddonManager","_addons","instance","loadAddon","terminal","loadedAddon","_wrappedAddonDispose","BufferApiView","_buffer","init","viewportY","baseY","getLine","BufferLineApiView","_line","getCell","startColumn","endColumn","BufferNamespaceApi","_core","_onBufferChange","onBufferChange","_alternate","alternate","ParserApi","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","UnicodeApi","provider","versions","activeVersion","isUserScrolling","_cachedBlankLine","topRow","bottomRow","willBufferBeTrimmed","oldYdisp","glevel","_charsets","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","DEFAULT_ENCODINGS","DEFAULT","SGR","SGR_PIXELS","name","_protocols","_encodings","_activeProtocol","_activeEncoding","_lastEvent","_onProtocolChange","addProtocol","addEncoding","encoding","_equalEvents","report","triggerBinaryEvent","down","up","drag","move","e1","e2","pixels","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_onRequestScrollToBottom","wasUserInput","disableStdin","$xmin","$xmax","_decorations","_onDecorationRegistered","_onDecorationRemoved","Decoration","markerDispose","getDecorationsAtCell","xmin","xmax","_cachedBg","_cachedFg","foregroundColor","ServiceCollection","service","_entries","_services","getService","ctor","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","traceCall","setTraceLogger","optionsKeyToLogLevel","trace","TRACE","info","INFO","ERROR","off","OFF","traceLogger","_logLevel","_updateLogLevel","_evalLazyOptionalParams","optionalParams","_log","message","logger","log","_target","descriptor","fn","JSON","stringify","DEFAULT_OPTIONS","customGlyphs","allowProposedApi","allowTransparency","FONT_WEIGHT_OPTIONS","_onOptionChange","defaultOptions","assign","_sanitizeAndValidateOption","_setupOptions","eventKey","getter","propName","setter","desc","_entriesWithId","_dataByLinkId","_removeMarkerFromLink","_getEntryIdKey","linkId","every","linkData","DI_TARGET","DI_DEPENDENCIES","serviceRegistry","decorator","_providers","_onChange","onChange","defaultProvider","_activeProvider","getStringCellWidth","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","CONSTRUCTOR_ONLY_OPTIONS","_addonManager","_publicOptions","_checkReadonlyOptions","_checkProposedApi","parser","unicode","mouseTrackingMode","applicationCursorKeysMode","applicationKeypadMode","originMode","reverseWraparoundMode","sendFocusMode","columns","_verifyIntegers","_verifyPositiveIntegers","writeln","addon","strings","Infinity"],"sourceRoot":""}