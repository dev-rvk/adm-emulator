{"version":3,"file":"static/chunks/938.330dd4e2a4c23e96.js","mappings":"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","sources":["webpack://_N_E/./src/components/frida/terminal.tsx","webpack://_N_E/FitAddon/webpack/universalModuleDefinition","webpack://_N_E/FitAddon/./src/FitAddon.ts","webpack://_N_E/<anon>"],"sourcesContent":["\"use client\";\n\nimport { Terminal } from \"xterm\";\nimport { FitAddon } from \"xterm-addon-fit\";\nimport \"xterm/css/xterm.css\";\nimport { useEffect, useRef } from \"react\";\nimport { getTheme } from \"@fluentui/react\";\n\ninterface TerminalProps {\n    onTerminalReady: (terminal: Terminal) => void;\n}\n\nexport default function XTerminal({ onTerminalReady }: TerminalProps) {\n    const terminalRef = useRef<HTMLDivElement>(null);\n    const terminalInstance = useRef<Terminal | null>(null);\n    const fitAddonRef = useRef<FitAddon | null>(null);\n    const theme = getTheme();\n\n    useEffect(() => {\n        const initTerminal = () => {\n            if (!terminalRef.current || terminalInstance.current) return;\n\n            const terminal = new Terminal({\n                fontFamily: \"Menlo, Monaco, 'Courier New', monospace\",\n                theme: {\n                    background: theme.palette.black,\n                    foreground: theme.palette.white,\n                },\n                convertEol: true,\n                cursorBlink: true,\n                allowTransparency: true,\n                scrollback: 1000,\n            });\n\n            const fitAddon = new FitAddon();\n            terminal.loadAddon(fitAddon);\n            fitAddonRef.current = fitAddon;\n            terminalInstance.current = terminal;\n\n            terminal.open(terminalRef.current);\n\n            // Delay fit to ensure proper initialization\n            setTimeout(() => {\n                try {\n                    fitAddonRef.current?.fit();\n                    onTerminalReady(terminal);\n                } catch (error) {\n                    console.error(\"Fit error:\", error);\n                }\n            }, 100);\n\n            // Handle resize\n            const handleResize = () => {\n                try {\n                    fitAddonRef.current?.fit();\n                } catch (error) {\n                    console.error(\"Resize fit error:\", error);\n                }\n            };\n\n            window.addEventListener(\"resize\", handleResize);\n\n            return () => {\n                window.removeEventListener(\"resize\", handleResize);\n                terminal.dispose();\n            };\n        };\n\n        initTerminal();\n    }, [onTerminalReady, theme.palette.black, theme.palette.white]);\n\n    return (\n        <div\n            ref={terminalRef}\n            style={{\n                width: \"100%\",\n                height: \"100%\",\n                backgroundColor: theme.palette.black,\n                padding: \"4px\",\n            }}\n        />\n    );\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FitAddon\"] = factory();\n\telse\n\t\troot[\"FitAddon\"] = factory();\n})(self, () => {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon } from 'xterm';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\n\ninterface ITerminalDimensions {\n  /**\n   * The number of rows in the terminal.\n   */\n  rows: number;\n\n  /**\n   * The number of columns in the terminal.\n   */\n  cols: number;\n}\n\nconst MINIMUM_COLS = 2;\nconst MINIMUM_ROWS = 1;\n\nexport class FitAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void {}\n\n  public fit(): void {\n    const dims = this.proposeDimensions();\n    if (!dims || !this._terminal || isNaN(dims.cols) || isNaN(dims.rows)) {\n      return;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    // Force a full render\n    if (this._terminal.rows !== dims.rows || this._terminal.cols !== dims.cols) {\n      core._renderService.clear();\n      this._terminal.resize(dims.cols, dims.rows);\n    }\n  }\n\n  public proposeDimensions(): ITerminalDimensions | undefined {\n    if (!this._terminal) {\n      return undefined;\n    }\n\n    if (!this._terminal.element || !this._terminal.element.parentElement) {\n      return undefined;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n    const dims: IRenderDimensions = core._renderService.dimensions;\n\n    if (dims.css.cell.width === 0 || dims.css.cell.height === 0) {\n      return undefined;\n    }\n\n    const scrollbarWidth = this._terminal.options.scrollback === 0 ?\n      0 : core.viewport.scrollBarWidth;\n\n    const parentElementStyle = window.getComputedStyle(this._terminal.element.parentElement);\n    const parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n    const parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')));\n    const elementStyle = window.getComputedStyle(this._terminal.element);\n    const elementPadding = {\n      top: parseInt(elementStyle.getPropertyValue('padding-top')),\n      bottom: parseInt(elementStyle.getPropertyValue('padding-bottom')),\n      right: parseInt(elementStyle.getPropertyValue('padding-right')),\n      left: parseInt(elementStyle.getPropertyValue('padding-left'))\n    };\n    const elementPaddingVer = elementPadding.top + elementPadding.bottom;\n    const elementPaddingHor = elementPadding.right + elementPadding.left;\n    const availableHeight = parentElementHeight - elementPaddingVer;\n    const availableWidth = parentElementWidth - elementPaddingHor - scrollbarWidth;\n    const geometry = {\n      cols: Math.max(MINIMUM_COLS, Math.floor(availableWidth / dims.css.cell.width)),\n      rows: Math.max(MINIMUM_ROWS, Math.floor(availableHeight / dims.css.cell.height))\n    };\n    return geometry;\n  }\n}\n"],"names":["XTerminal","param","onTerminalReady","terminalRef","useRef","terminalInstance","fitAddonRef","theme","getTheme","useEffect","initTerminal","current","terminal","Terminal","fontFamily","background","palette","black","foreground","white","convertEol","cursorBlink","allowTransparency","scrollback","fitAddon","FitAddon","loadAddon","open","setTimeout","fit","error","console","handleResize","window","addEventListener","removeEventListener","dispose","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","div","ref","style","width","height","backgroundColor","padding","e","self","module","exports","Object","defineProperty","value","t","activate","this","_terminal","dims","proposeDimensions","isNaN","cols","rows","core","_core","_renderService","clear","resize","element","parentElement","dimensions","css","cell","scrollbarWidth","options","viewport","scrollBarWidth","parentElementStyle","getComputedStyle","parentElementHeight","parseInt","getPropertyValue","parentElementWidth","Math","max","elementStyle","availableHeight","availableWidth","floor"],"sourceRoot":""}