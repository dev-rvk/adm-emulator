{"version":3,"file":"static/chunks/pages/chrome-devtools-630fa9e2e454e827.js","mappings":"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","sources":["webpack://_N_E/?82bc","webpack://_N_E/./src/pages/chrome-devtools.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/chrome-devtools\",\n      function () {\n        return require(\"private-next-pages/chrome-devtools.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/chrome-devtools\"])\n      });\n    }\n  ","import { Link, Stack } from \"@fluentui/react\";\nimport { makeStyles } from \"@griffel/react\";\nimport { AdbSocket } from \"@yume-chan/adb\";\nimport {\n    Consumable,\n    ReadableStreamDefaultReader,\n    WritableStreamDefaultWriter,\n} from \"@yume-chan/stream-extra\";\nimport {\n    Agent,\n    Client,\n    Duplex,\n    Pool,\n    Symbols,\n    WebSocket,\n    request,\n} from \"@yume-chan/undici-browser\";\nimport {\n    action,\n    makeAutoObservable,\n    observable,\n    reaction,\n    runInAction,\n} from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport { NextPage } from \"next\";\nimport getConfig from \"next/config\";\nimport Head from \"next/head\";\nimport type { Socket } from \"node:net\";\nimport { useCallback, useEffect } from \"react\";\nimport { GLOBAL_STATE } from \"../state\";\nimport { RouteStackProps } from \"../utils\";\n\nclass AdbUndiciSocket extends Duplex {\n    private _socket: AdbSocket;\n    private _reader: ReadableStreamDefaultReader<Uint8Array>;\n    private _writer: WritableStreamDefaultWriter<Consumable<Uint8Array>>;\n\n    constructor(socket: AdbSocket) {\n        super();\n        this._socket = socket;\n        this._reader = this._socket.readable.getReader();\n        this._writer = this._socket.writable.getWriter();\n        this._reader.closed.then(() => this.emit(\"end\"));\n    }\n\n    async _read(size: number): Promise<void> {\n        try {\n            const result = await this._reader.read();\n            if (result.done) {\n                this.emit(\"end\");\n            } else {\n                this.push(result.value);\n            }\n        } catch {\n            //ignore\n        }\n    }\n\n    async _write(\n        chunk: any,\n        encoding: BufferEncoding,\n        callback: (error?: Error | null | undefined) => void,\n    ): Promise<void> {\n        const consumable = new Consumable(chunk);\n        try {\n            await this._writer.write(consumable);\n            callback();\n        } catch (e) {\n            callback(e as Error);\n        }\n    }\n\n    async _destroy(\n        error: Error | null,\n        callback: (error: Error | null) => void,\n    ): Promise<void> {\n        await this._socket.close();\n        callback(error);\n    }\n}\n\nconst agent = new Agent({\n    factory(origin, opts) {\n        const pool = new Pool(origin, {\n            ...opts,\n            factory(origin, opts) {\n                const client = new Client(origin, opts);\n                // Remote debugging validates `Host` header to defend against DNS rebinding attacks.\n                // But we can only pass socket name using hostname, so we need to override it.\n                (client as any)[Symbols.kHostHeader] = \"Host: localhost\\r\\n\";\n                return client;\n            },\n        });\n        return pool;\n    },\n    async connect(options, callback) {\n        try {\n            const socket = await GLOBAL_STATE.adb!.createSocket(\n                \"localabstract:\" + options.hostname,\n            );\n            callback(null, new AdbUndiciSocket(socket) as unknown as Socket);\n        } catch (e) {\n            callback(e as Error, null);\n        }\n    },\n});\n\ninterface Page {\n    description: string;\n    devtoolsFrontendUrl: string;\n    id: string;\n    title: string;\n    type: string;\n    url: string;\n    webSocketDebuggerUrl: string;\n}\n\ninterface Version {\n    \"Android-Package\": string;\n    Browser: string;\n    \"Protocol-Version\": string;\n    \"User-Agent\": string;\n    \"V8-Version\": string;\n    \"WebKit-Version\": string;\n    webSocketDebuggerUrl: string;\n}\n\n// https://source.chromium.org/chromium/chromium/src/+/refs/heads/main:chrome/browser/devtools/device/devtools_device_discovery.cc;l=36;drc=4651cec294d1542d6673a89190e192e20de03240\n\nasync function getPages(socket: string) {\n    const response = await request(`http://${socket}/json`, {\n        dispatcher: agent,\n    });\n    const body = await response.body.json();\n    return body as Page[];\n}\n\nasync function getVersion(socket: string) {\n    const response = await request(`http://${socket}/json/version`, {\n        dispatcher: agent,\n    });\n    const body = await response.body.json();\n    return body as Version;\n}\n\nasync function focusPage(socket: string, page: Page) {\n    await request(`http://${socket}/json/activate/${page.id}`, {\n        dispatcher: agent,\n    });\n}\n\nasync function closePage(socket: string, page: Page) {\n    await request(`http://${socket}/json/close/${page.id}`, {\n        dispatcher: agent,\n    });\n}\n\nconst {\n    publicRuntimeConfig: { basePath },\n} = getConfig();\n\n// Use a fixed version from Chrome's distribution, updated regularly.\n// Opera: doesn't host its own frontend\n// Edge: only have versions for Canary version, have license issues\n// Brave: `frontendUrl` points to Google's but version number is invalid\nconst FRONTEND_SCRIPT =\n    \"https://chrome-devtools-frontend.appspot.com/serve_internal_file/@3c3641f7c28cf564edd441cc4ca2838b32c4e52a/front_end/entrypoints/inspector/inspector.js\";\n\nfunction getPopupParams(page: Page) {\n    const frontendUrl = page.devtoolsFrontendUrl;\n    const [, params] = frontendUrl.split(\"?\");\n    return {\n        script: FRONTEND_SCRIPT,\n        params,\n    };\n}\n\ninterface Browser {\n    socket: string;\n    version: Version;\n    pages: Page[];\n}\n\nconst STATE = makeAutoObservable(\n    {\n        browsers: [] as Browser[],\n        intervalId: null as NodeJS.Timeout | null,\n        visible: false,\n    },\n    {\n        browsers: observable.deep,\n    },\n);\n\nconst SOCKET_NAMES = [\n    \"@(.*)_devtools_remote(_\\\\d+)?\",\n    \"@com\\\\.opera\\\\.browser(\\\\.beta)?\\\\.devtools\",\n];\n\nconst GET_SOCKET_COMMAND = [\n    \"cat /proc/net/unix\",\n    `grep -E \"${SOCKET_NAMES.join(\"|\")}\"`,\n    \"awk '{print substr($8, 2)}'\",\n];\n\nasync function getBrowsers() {\n    const device = GLOBAL_STATE.adb!;\n    const sockets = await device.subprocess.spawnAndWaitLegacy(\n        GET_SOCKET_COMMAND.join(\" | \"),\n    );\n    const browsers: Browser[] = [];\n    for (const socket of sockets.split(\"\\n\").filter(Boolean)) {\n        if (browsers.some((browser) => browser.socket == socket)) {\n            continue;\n        }\n\n        try {\n            const version = await getVersion(socket);\n            const pages = await getPages(socket);\n            console.log(socket, version, pages);\n            browsers.push({ socket, version, pages });\n        } catch (e) {\n            console.error(socket, e);\n        }\n    }\n    runInAction(() => {\n        STATE.browsers = browsers;\n    });\n}\n\nreaction(\n    () => [GLOBAL_STATE.adb, STATE.visible] as const,\n    ([device, visible]) => {\n        if (!device || !visible) {\n            STATE.browsers = [];\n            if (STATE.intervalId) {\n                clearInterval(STATE.intervalId);\n                STATE.intervalId = null;\n            }\n            return;\n        }\n\n        STATE.intervalId = setInterval(() => {\n            getBrowsers();\n        }, 5000);\n\n        getBrowsers();\n    },\n);\n\nconst PACKAGE_NAMES: Record<string, string | undefined> = {\n    \"com.android.chrome\": \"Google Chrome\",\n    \"com.chrome.beta\": \"Google Chrome Beta\",\n    \"com.chrome.dev\": \"Google Chrome Dev\",\n    \"com.chrome.canary\": \"Google Chrome Canary\",\n    \"com.microsoft.emmx\": \"Microsoft Edge\",\n    \"com.microsoft.emmx.beta\": \"Microsoft Edge Beta\",\n    \"com.microsoft.emmx.dev\": \"Microsoft Edge Dev\",\n    \"com.microsoft.emmx.canary\": \"Microsoft Edge Canary\",\n    \"com.opera.browser\": \"Opera\",\n    \"com.opera.browser.beta\": \"Opera Beta\",\n    \"com.vivaldi.browser\": \"Vivaldi\",\n};\n\nfunction getBrowserName(version: Version) {\n    const [, versionNumber] = version.Browser.split(\"/\");\n    const name =\n        PACKAGE_NAMES[version[\"Android-Package\"]] || version[\"Android-Package\"];\n    return `${name} (${versionNumber})`;\n}\n\nconst useClasses = makeStyles({\n    header: {\n        marginTop: \"4px\",\n        marginBottom: \"4px\",\n    },\n    url: {\n        marginLeft: \"8px\",\n        color: \"#999\",\n    },\n    link: {\n        marginRight: \"12px\",\n    },\n});\n\nconst ChromeDevToolsPage: NextPage = observer(function ChromeDevTools() {\n    const classes = useClasses();\n\n    useEffect(() => {\n        runInAction(() => {\n            STATE.visible = true;\n        });\n\n        return action(() => {\n            STATE.visible = false;\n        });\n    }, []);\n\n    const handleInspectClick = useCallback((socket: string, page: Page) => {\n        const { script, params } = getPopupParams(page);\n        const childWindow = window.open(\n            `${basePath}/chrome-devtools-frame?script=${script}&${params}`,\n            \"_blank\",\n            \"popup\",\n        )!;\n        childWindow.addEventListener(\"message\", (e) => {\n            if (\n                typeof e.data !== \"object\" ||\n                !(\"type\" in e.data) ||\n                e.data.type !== \"AdbWebSocket\"\n            ) {\n                return;\n            }\n\n            const url = new URL(e.data.url as string);\n            url.host = socket;\n\n            const port = e.ports[0];\n\n            const ws = new WebSocket(url, {\n                dispatcher: agent,\n            });\n            ws.binaryType = \"arraybuffer\";\n            ws.onopen = () => {\n                port.postMessage({ type: \"open\" });\n            };\n            ws.onclose = () => {\n                port.postMessage({ type: \"close\" });\n                port.close();\n            };\n            ws.onmessage = (e) => {\n                const { data } = e;\n                port.postMessage({\n                    type: \"message\",\n                    message: data,\n                });\n            };\n\n            port.onmessage = (e) => {\n                switch (e.data.type) {\n                    case \"message\":\n                        ws.send(e.data.message);\n                        break;\n                    case \"close\":\n                        ws.close();\n                        break;\n                }\n            };\n\n            childWindow.addEventListener(\"close\", () => {\n                ws.close();\n            });\n\n            globalThis.addEventListener(\"beforeunload\", () => {\n                port.postMessage({ type: \"close\" });\n                port.close();\n            });\n\n        });    }, []);\n\n    const handleFocusClick = useCallback((socket: string, page: Page) => {\n        focusPage(socket, page);\n    }, []);\n\n    const handleCloseClick = useCallback((socket: string, page: Page) => {\n        closePage(socket, page);\n        getBrowsers();\n    }, []);\n\n    return (\n        <Stack {...RouteStackProps}>\n            <Head>\n                <title>Chrome Remote Debugging</title>\n            </Head>\n\n            {STATE.browsers.length === 0 ? (\n                <>\n                    <h2>Supported browsers:</h2>\n                    <ul>\n                        <li>Google Chrome (stable/beta/dev/canary)</li>\n                        <li>Microsoft Edge (stable/beta/dev/canary)</li>\n                        <li>Opera (stable/beta)</li>\n                        <li>Vivaldi</li>\n                        <li>Any WebView with remote debugging on</li>\n                    </ul>\n                </>\n            ) : (\n                STATE.browsers.map((browser) => (\n                    <>\n                        {browser.version && (\n                            <h3 className={classes.header}>\n                                {getBrowserName(browser.version)}\n                            </h3>\n                        )}\n\n                        {browser.pages.map((page) => (\n                            <div key={page.id}>\n                                <div>\n                                    {page.title ? (\n                                        <span\n                                            dangerouslySetInnerHTML={{\n                                                __html: page.title,\n                                            }}\n                                        />\n                                    ) : (\n                                        <i>No Title</i>\n                                    )}\n\n                                    <span className={classes.url}>\n                                        {page.url || <i>No URL</i>}\n                                    </span>\n                                </div>\n                                <div>\n                                    <Link\n                                        className={classes.link}\n                                        onClick={() =>\n                                            handleInspectClick(\n                                                browser.socket,\n                                                page,\n                                            )\n                                        }\n                                    >\n                                        Inspect\n                                    </Link>\n                                    <Link\n                                        className={classes.link}\n                                        onClick={() =>\n                                            handleFocusClick(\n                                                browser.socket,\n                                                page,\n                                            )\n                                        }\n                                    >\n                                        Focus\n                                    </Link>\n                                    <Link\n                                        className={classes.link}\n                                        onClick={() =>\n                                            handleCloseClick(\n                                                browser.socket,\n                                                page,\n                                            )\n                                        }\n                                    >\n                                        Close\n                                    </Link>\n                                </div>\n                            </div>\n                        ))}\n                    </>\n                ))\n            )}\n        </Stack>\n    );\n});\n\nexport default ChromeDevToolsPage;\n"],"names":["window","__NEXT_P","push","__webpack_require__","AdbUndiciSocket","Duplex","_read","size","result","_reader","read","done","emit","value","e","_write","chunk","encoding","callback","consumable","Consumable","_writer","write","_destroy","error","_socket","close","constructor","socket","readable","getReader","writable","getWriter","closed","then","agent","Agent","factory","origin","opts","pool","Pool","client","Client","Symbols","kHostHeader","connect","options","GLOBAL_STATE","adb","createSocket","hostname","getPages","response","request","concat","dispatcher","body","json","getVersion","focusPage","page","id","closePage","publicRuntimeConfig","basePath","getConfig","STATE","makeAutoObservable","browsers","intervalId","visible","observable","deep","GET_SOCKET_COMMAND","SOCKET_NAMES","getBrowsers","device","sockets","subprocess","spawnAndWaitLegacy","join","split","filter","Boolean","some","browser","version","pages","console","log","runInAction","reaction","param","clearInterval","setInterval","PACKAGE_NAMES","useClasses","makeStyles","header","marginTop","marginBottom","url","marginLeft","color","link","marginRight","ChromeDevToolsPage","observer","classes","useEffect","action","handleInspectClick","useCallback","script","params","getPopupParams","frontendUrl","devtoolsFrontendUrl","childWindow","open","addEventListener","data","type","URL","host","port","ports","ws","WebSocket","binaryType","onopen","postMessage","onclose","onmessage","message","send","globalThis","handleFocusClick","handleCloseClick","jsx_runtime","jsxs","Stack","RouteStackProps","jsx","Head","title","length","Fragment","h2","ul","li","map","h3","className","getBrowserName","versionNumber","Browser","name","div","span","dangerouslySetInnerHTML","__html","i","Link","onClick","chrome_devtools"],"sourceRoot":""}