{"version":3,"file":"static/chunks/pages/forward-b5e0d4a50f47833c.js","mappings":"mFACA,CAAAA,OAAAC,QAAA,CAAAD,OAAAC,QAAA,MAAAC,IAAA,EACA,WACA,WACA,OAAeC,EAAQ,KACvB,EACA,0GCIA,IAAMC,EAAQC,CAAAA,EAAAA,EAAAA,EAAAA,EAAmB,CAC7BC,IAAK,EAAE,GAGXC,CAAAA,EAAAA,EAAAA,EAAAA,EACI,IAAMC,EAAAA,YAAYA,CAACC,GAAG,CACtB,MAAOC,IACH,GAAI,CAACA,EACD,OAGJ,IAAMC,EAAS,MAAMD,EAAOE,YAAY,CAAC,aACzCC,CAAAA,EAAAA,EAAAA,CAAAA,EAAY,KACRT,EAAME,GAAG,CAACJ,IAAI,CAAE,YACpB,GACA,IAAMY,EAASH,EAAOI,QAAQ,CAACC,SAAS,EACxC,OAAMC,EAAAA,wBAAwBA,CAACC,KAAK,CAACJ,EAAQK,CAAAA,EAAAA,EAAAA,UAAAA,EAAW,YAExD,IAAMC,EAAST,EAAOU,QAAQ,CAACC,SAAS,GAClCC,EAAS,MAAMH,EAAOI,IAAI,EAC5BD,CAAAA,EAAOE,KAAK,EACZZ,CAAAA,EAAAA,EAAAA,CAAAA,EAAY,KACRT,EAAME,GAAG,CAACJ,IAAI,CAAC,aAAuCwB,MAAA,CAA1BC,CAAAA,EAAAA,EAAAA,UAAAA,EAAWJ,EAAOE,KAAK,GACvD,EAER,EACA,CAAEG,gBAAiB,EAAK,GAa5BC,EAAA,QAAeC,CAAAA,EAAAA,EAAAA,EAAAA,EAVqB,IAE5B,GAAAC,EAAAC,GAAA,EAACC,MAAAA,UACI7B,EAAME,GAAG,CAAC4B,GAAG,CAAC,CAACC,EAAMC,IAClB,GAAAL,EAAAC,GAAA,EAACC,MAAAA,UAAiBE,GAARC","sources":["webpack://_N_E/?d1ba","webpack://_N_E/./src/pages/forward.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/forward\",\n      function () {\n        return require(\"private-next-pages/forward.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/forward\"])\n      });\n    }\n  ","import { NOOP, decodeUtf8, encodeUtf8 } from \"@yume-chan/adb\";\nimport {\n    ConsumableWritableStream,\n    WritableStream,\n} from \"@yume-chan/stream-extra\";\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport { NextPage } from \"next\";\nimport { GLOBAL_STATE } from \"../state\";\n\nconst state = makeAutoObservable({\n    log: [] as string[],\n});\n\nreaction(\n    () => GLOBAL_STATE.adb,\n    async (device) => {\n        if (!device) {\n            return;\n        }\n\n        const socket = await device.createSocket(\"tcp:27042\");\n        runInAction(() => {\n            state.log.push(`connected`);\n        });\n        const writer = socket.writable.getWriter();\n        await ConsumableWritableStream.write(writer, encodeUtf8(\"Hello\\n\"));\n\n        const reader = socket.readable.getReader();\n        const result = await reader.read();\n        if (result.value) {\n            runInAction(() => {\n                state.log.push(`received: ${decodeUtf8(result.value!)}`);\n            });\n        }\n    },\n    { fireImmediately: true },\n);\n\nconst ForwardTesterPage: NextPage = () => {\n    return (\n        <div>\n            {state.log.map((line, index) => (\n                <div key={index}>{line}</div>\n            ))}\n        </div>\n    );\n};\n\nexport default observer(ForwardTesterPage);\n"],"names":["window","__NEXT_P","push","__webpack_require__","state","makeAutoObservable","log","reaction","GLOBAL_STATE","adb","device","socket","createSocket","runInAction","writer","writable","getWriter","ConsumableWritableStream","write","encodeUtf8","reader","readable","getReader","result","read","value","concat","decodeUtf8","fireImmediately","__webpack_exports__","observer","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","div","map","line","index"],"sourceRoot":""}