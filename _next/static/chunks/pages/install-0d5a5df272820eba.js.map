{"version":3,"file":"static/chunks/pages/install-0d5a5df272820eba.js","mappings":"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","sources":["webpack://_N_E/?6805","webpack://_N_E/./src/pages/install.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/install\",\n      function () {\n        return require(\"private-next-pages/install.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/install\"])\n      });\n    }\n  ","import {\n    Checkbox,\n    PrimaryButton,\n    ProgressIndicator,\n    Stack,\n} from \"@fluentui/react\";\nimport {\n    PackageManager,\n    PackageManagerInstallOptions,\n} from \"@yume-chan/android-bin\";\nimport { WrapConsumableStream, WritableStream } from \"@yume-chan/stream-extra\";\nimport { action, makeAutoObservable, observable, runInAction } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport { NextPage } from \"next\";\nimport Head from \"next/head\";\nimport { GLOBAL_STATE } from \"../state\";\nimport {\n    ProgressStream,\n    RouteStackProps,\n    createFileStream,\n    pickFile,\n} from \"../utils\";\n\nenum Stage {\n    Uploading,\n\n    Installing,\n\n    Completed,\n}\n\ninterface Progress {\n    filename: string;\n\n    stage: Stage;\n\n    uploadedSize: number;\n\n    totalSize: number;\n\n    value: number | undefined;\n}\n\nclass InstallPageState {\n    installing = false;\n\n    progress: Progress | undefined = undefined;\n\n    log: string = \"\";\n\n    options: Partial<PackageManagerInstallOptions> = {\n        bypassLowTargetSdkBlock: false,\n    };\n\n    constructor() {\n        makeAutoObservable(this, {\n            progress: observable.ref,\n            install: false,\n            options: observable.deep,\n        });\n    }\n\n    install = async () => {\n        const file = await pickFile({ accept: \".apk\" });\n        if (!file) {\n            return;\n        }\n\n        runInAction(() => {\n            this.installing = true;\n            this.progress = {\n                filename: file.name,\n                stage: Stage.Uploading,\n                uploadedSize: 0,\n                totalSize: file.size,\n                value: 0,\n            };\n            this.log = \"\";\n        });\n\n        const pm = new PackageManager(GLOBAL_STATE.adb!);\n        const start = Date.now();\n        const log = await pm.installStream(\n            file.size,\n            createFileStream(file)\n                .pipeThrough(new WrapConsumableStream())\n                .pipeThrough(\n                    new ProgressStream(\n                        action((uploaded) => {\n                            if (uploaded !== file.size) {\n                                this.progress = {\n                                    filename: file.name,\n                                    stage: Stage.Uploading,\n                                    uploadedSize: uploaded,\n                                    totalSize: file.size,\n                                    value: (uploaded / file.size) * 0.8,\n                                };\n                            } else {\n                                this.progress = {\n                                    filename: file.name,\n                                    stage: Stage.Installing,\n                                    uploadedSize: uploaded,\n                                    totalSize: file.size,\n                                    value: 0.8,\n                                };\n                            }\n                        }),\n                    ),\n                ),\n        );\n\n        const elapsed = Date.now() - start;\n        await log.pipeTo(\n            new WritableStream({\n                write: action((chunk) => {\n                    this.log += chunk;\n                }),\n            }),\n        );\n\n        const transferRate = (\n            file.size /\n            (elapsed / 1000) /\n            1024 /\n            1024\n        ).toFixed(2);\n        this.log += `Install finished in ${elapsed}ms at ${transferRate}MB/s`;\n\n        runInAction(() => {\n            this.progress = {\n                filename: file.name,\n                stage: Stage.Completed,\n                uploadedSize: file.size,\n                totalSize: file.size,\n                value: 1,\n            };\n            this.installing = false;\n        });\n    };\n}\n\nconst state = new InstallPageState();\n\nconst Install: NextPage = () => {\n    return (\n        <Stack {...RouteStackProps}>\n            <Head>\n                <title>Install APK</title>\n            </Head>\n\n            <Stack horizontal>\n                <Checkbox\n                    label=\"--bypass-low-target-sdk-block (Android 14)\"\n                    checked={state.options.bypassLowTargetSdkBlock}\n                    onChange={(_, checked) => {\n                        if (checked === undefined) {\n                            return;\n                        }\n                        runInAction(() => {\n                            state.options.bypassLowTargetSdkBlock = checked;\n                        });\n                    }}\n                />\n            </Stack>\n\n            <Stack horizontal>\n                <PrimaryButton\n                    disabled={!GLOBAL_STATE.adb || state.installing}\n                    text=\"Browse APK\"\n                    onClick={state.install}\n                />\n            </Stack>\n\n            {state.progress && (\n                <ProgressIndicator\n                    styles={{ root: { width: 300 } }}\n                    label={state.progress.filename}\n                    percentComplete={state.progress.value}\n                    description={Stage[state.progress.stage]}\n                />\n            )}\n\n            {state.log && <pre>{state.log}</pre>}\n        </Stack>\n    );\n};\n\nexport default observer(Install);\n"],"names":["window","__NEXT_P","push","__webpack_require__","Stage","Uploading","Installing","Completed","state","constructor","installing","progress","undefined","log","options","bypassLowTargetSdkBlock","install","file","pickFile","accept","runInAction","filename","name","stage","uploadedSize","totalSize","size","value","pm","PackageManager","GLOBAL_STATE","adb","start","Date","now","installStream","createFileStream","pipeThrough","WrapConsumableStream","ProgressStream","action","uploaded","elapsed","pipeTo","WritableStream","write","chunk","transferRate","toFixed","concat","makeAutoObservable","observable","ref","deep","__webpack_exports__","observer","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Stack","RouteStackProps","jsx","Head","title","horizontal","Checkbox","label","checked","onChange","_","PrimaryButton","disabled","text","onClick","ProgressIndicator","styles","root","width","percentComplete","description","pre"],"sourceRoot":""}