{"version":3,"file":"static/chunks/610-8942586e80e3203d.js","mappings":"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","sources":["webpack://_N_E/../../node_modules/.pnpm/@yume-chan+aoa@0.0.21/node_modules/@yume-chan/aoa/src/type.ts","webpack://_N_E/../../node_modules/.pnpm/@yume-chan+aoa@0.0.21/node_modules/@yume-chan/aoa/src/audio.ts","webpack://_N_E/../../node_modules/.pnpm/@yume-chan+aoa@0.0.21/node_modules/@yume-chan/aoa/src/filter.ts","webpack://_N_E/../../node_modules/.pnpm/@yume-chan+aoa@0.0.21/node_modules/@yume-chan/aoa/src/hid.ts","webpack://_N_E/../../node_modules/.pnpm/@yume-chan+aoa@0.0.21/node_modules/@yume-chan/aoa/src/initialize.ts","webpack://_N_E/../../node_modules/.pnpm/@yume-chan+aoa@0.0.21/node_modules/@yume-chan/aoa/src/keyboard.ts","webpack://_N_E/../../node_modules/.pnpm/@yume-chan+aoa@0.0.21/node_modules/@yume-chan/aoa/src/mouse.ts","webpack://_N_E/../../node_modules/.pnpm/@yume-chan+aoa@0.0.21/node_modules/@yume-chan/aoa/src/index.ts","webpack://_N_E/<anon>"],"sourcesContent":["export enum AoaRequestType {\n    GetProtocol = 51,\n    SendString,\n    Start,\n    RegisterHid,\n    UnregisterHid,\n    SetHidReportDescriptor,\n    SendHidEvent,\n    SetAudioMode,\n}\n","import { AoaRequestType } from \"./type.js\";\n\n// The original plan is to add more audio modes,\n// but AOA audio accessory mode is soon deprecated in Android 8.\nexport enum AoaAudioMode {\n    Off,\n    /**\n     * 2 channel, 16 bit, 44.1KHz PCM\n     */\n    On,\n}\n\n/**\n * Sets the audio mode. This method must be called before {@link aoaStartAccessory}.\n *\n * AOA audio accessory mode turns the Android device into a USB microphone,\n * all system audio will be directed to the microphone, to be capture by the USB host.\n *\n * It's like connecting a audio cable between the Android headphone jack and PC microphone jack,\n * except all signals are digital.\n *\n * Audio mode is deprecated in Android 8. On Android 9 and later, this call still switches the device\n * to audio accessory mode, and the device will be recognized as a USB microphone, but the\n * required USB endpoint is not presented anymore.\n * @param device The Android device.\n * @param mode The audio mode.\n */\nexport async function aoaSetAudioMode(device: USBDevice, mode: AoaAudioMode) {\n    await device.controlTransferOut(\n        {\n            recipient: \"device\",\n            requestType: \"vendor\",\n            request: AoaRequestType.SetAudioMode,\n            value: mode,\n            index: 0,\n        },\n        new ArrayBuffer(0)\n    );\n}\n\nfunction findAudioStreamingInterface(device: USBDevice) {\n    for (const configuration of device.configurations) {\n        for (const interface_ of configuration.interfaces) {\n            for (const alternate of interface_.alternates) {\n                // Audio\n                if (alternate.interfaceClass !== 0x01) {\n                    continue;\n                }\n                // AudioStreaming\n                if (alternate.interfaceSubclass !== 0x02) {\n                    continue;\n                }\n                if (alternate.endpoints.length === 0) {\n                    continue;\n                }\n                return { configuration, interface_, alternate };\n            }\n        }\n    }\n\n    throw new Error(\"No matched alternate interface found\");\n}\n\n/**\n * It doesn't work on Web, because Chrome blocked audio devices from WebUSB API.\n * @param device The Android device.\n * @returns A readable stream of raw audio data.\n */\nexport function aoaGetAudioStream(device: USBDevice) {\n    let endpointNumber!: number;\n    return new ReadableStream<Uint8Array>({\n        async start() {\n            const { configuration, interface_, alternate } =\n                findAudioStreamingInterface(device);\n\n            if (\n                device.configuration?.configurationValue !==\n                configuration.configurationValue\n            ) {\n                await device.selectConfiguration(\n                    configuration.configurationValue\n                );\n            }\n\n            if (!interface_.claimed) {\n                await device.claimInterface(interface_.interfaceNumber);\n            }\n\n            if (\n                interface_.alternate.alternateSetting !==\n                alternate.alternateSetting\n            ) {\n                await device.selectAlternateInterface(\n                    interface_.interfaceNumber,\n                    alternate.alternateSetting\n                );\n            }\n\n            const endpoint = alternate.endpoints.find(\n                (endpoint) =>\n                    endpoint.type === \"isochronous\" &&\n                    endpoint.direction === \"in\"\n            );\n            if (!endpoint) {\n                throw new Error(\"No matched endpoint found\");\n            }\n\n            endpointNumber = endpoint.endpointNumber;\n        },\n        async pull(controller) {\n            const result = await device.isochronousTransferIn(endpointNumber, [\n                1024,\n            ]);\n            for (const packet of result.packets) {\n                const data = packet.data!;\n                const array = new Uint8Array(\n                    data.buffer,\n                    data.byteOffset,\n                    data.byteLength\n                );\n                controller.enqueue(array);\n            }\n        },\n    });\n}\n","export const AOA_DEFAULT_DEVICE_FILTERS = [\n    {\n        vendorId: 0x18d1,\n        // accessory\n        productId: 0x2d00,\n    },\n    {\n        vendorId: 0x18d1,\n        // accessory + adb\n        productId: 0x2d01,\n    },\n] as const satisfies readonly USBDeviceFilter[];\n","import { AoaRequestType } from \"./type.js\";\n\nexport async function aoaHidRegister(\n    device: USBDevice,\n    accessoryId: number,\n    reportDescriptorSize: number\n) {\n    await device.controlTransferOut(\n        {\n            recipient: \"device\",\n            requestType: \"vendor\",\n            request: AoaRequestType.RegisterHid,\n            value: accessoryId,\n            index: reportDescriptorSize,\n        },\n        new ArrayBuffer(0)\n    );\n}\n\nexport async function aoaHidSetReportDescriptor(\n    device: USBDevice,\n    accessoryId: number,\n    reportDescriptor: Uint8Array\n) {\n    await device.controlTransferOut(\n        {\n            recipient: \"device\",\n            requestType: \"vendor\",\n            request: AoaRequestType.SetHidReportDescriptor,\n            value: accessoryId,\n            index: 0,\n        },\n        reportDescriptor\n    );\n}\n\nexport async function aoaHidUnregister(device: USBDevice, accessoryId: number) {\n    await device.controlTransferOut(\n        {\n            recipient: \"device\",\n            requestType: \"vendor\",\n            request: AoaRequestType.UnregisterHid,\n            value: accessoryId,\n            index: 0,\n        },\n        new ArrayBuffer(0)\n    );\n}\n\nexport async function aoaHidSendInputReport(\n    device: USBDevice,\n    accessoryId: number,\n    event: Uint8Array\n) {\n    await device.controlTransferOut(\n        {\n            recipient: \"device\",\n            requestType: \"vendor\",\n            request: AoaRequestType.SendHidEvent,\n            value: accessoryId,\n            index: 0,\n        },\n        event\n    );\n}\n\n/**\n * Emulate a HID device over AOA protocol.\n *\n * It can only send input reports, but not send feature reports nor receive output reports.\n */\nexport class AoaHidDevice {\n    /**\n     * Register a HID device.\n     * @param device The Android device.\n     * @param accessoryId An arbitrary number to uniquely identify the HID device.\n     * @param reportDescriptor The HID report descriptor.\n     * @returns An instance of AoaHidDevice to send events.\n     */\n    static async register(\n        device: USBDevice,\n        accessoryId: number,\n        reportDescriptor: Uint8Array\n    ) {\n        await aoaHidRegister(device, accessoryId, reportDescriptor.length);\n        await aoaHidSetReportDescriptor(device, accessoryId, reportDescriptor);\n        return new AoaHidDevice(device, accessoryId);\n    }\n\n    #device: USBDevice;\n    #accessoryId: number;\n\n    constructor(device: USBDevice, accessoryId: number) {\n        this.#device = device;\n        this.#accessoryId = accessoryId;\n    }\n\n    async sendInputReport(event: Uint8Array) {\n        await aoaHidSendInputReport(this.#device, this.#accessoryId, event);\n    }\n\n    async unregister() {\n        await aoaHidUnregister(this.#device, this.#accessoryId);\n    }\n}\n","import { AoaRequestType } from \"./type.js\";\n\nexport async function aoaGetProtocol(device: USBDevice) {\n    const result = await device.controlTransferIn(\n        {\n            recipient: \"device\",\n            requestType: \"vendor\",\n            request: AoaRequestType.GetProtocol,\n            value: 0,\n            index: 0,\n        },\n        2\n    );\n    const version = result.data!.getUint16(0, true);\n    return version;\n}\n\n/**\n * The device will reset (disconnect) after this call.\n * @param device The Android device.\n */\nexport async function aoaStartAccessory(device: USBDevice) {\n    await device.controlTransferOut(\n        {\n            recipient: \"device\",\n            requestType: \"vendor\",\n            request: AoaRequestType.Start,\n            value: 0,\n            index: 0,\n        },\n        new ArrayBuffer(0)\n    );\n}\n","// cspell:ignore Oper\n\n// Most names follow Web API `KeyboardEvent.code`,\nexport enum HidKeyCode {\n    KeyA = 4,\n    KeyB,\n    KeyC,\n    KeyD,\n    KeyE,\n    KeyF,\n    KeyG,\n    KeyH,\n    KeyI,\n    KeyJ,\n    KeyK,\n    KeyL,\n    KeyM,\n    KeyN,\n    KeyO,\n    KeyP,\n    KeyQ,\n    KeyR,\n    KeyS,\n    KeyT,\n    KeyU,\n    KeyV,\n    KeyW,\n    KeyX,\n    KeyY,\n    KeyZ,\n    Digit1,\n    Digit2,\n    Digit3,\n    Digit4,\n    Digit5,\n    Digit6,\n    Digit7,\n    Digit8,\n    Digit9,\n    Digit0,\n    Enter,\n    Escape,\n    Backspace,\n    Tab,\n    Space,\n    Minus,\n    Equal,\n    BracketLeft,\n    BracketRight,\n    Backslash,\n    NonUsHash,\n    Semicolon,\n    Quote,\n    Backquote,\n    Comma,\n    Period,\n    Slash,\n    CapsLock,\n    F1,\n    F2,\n    F3,\n    F4,\n    F5,\n    F6,\n    F7,\n    F8,\n    F9,\n    F10,\n    F11,\n    F12,\n    PrintScreen,\n    ScrollLock,\n    Pause,\n    Insert,\n    Home,\n    PageUp,\n    Delete,\n    End,\n    PageDown,\n    ArrowRight,\n    ArrowLeft,\n    ArrowDown,\n    ArrowUp,\n    NumLock,\n    NumpadDivide,\n    NumpadMultiply,\n    NumpadSubtract,\n    NumpadAdd,\n    NumpadEnter,\n    Numpad1,\n    Numpad2,\n    Numpad3,\n    Numpad4,\n    Numpad5,\n    Numpad6,\n    Numpad7,\n    Numpad8,\n    Numpad9,\n    Numpad0,\n    NumpadDecimal,\n    NonUsBackslash,\n    ContextMenu,\n    Power,\n    NumpadEqual,\n    F13,\n    F14,\n    F15,\n    F16,\n    F17,\n    F18,\n    F19,\n    F20,\n    F21,\n    F22,\n    F23,\n    F24,\n\n    Execute,\n    Help,\n    Menu,\n    Select,\n    Stop,\n    Again,\n    Undo,\n    Cut,\n    Copy,\n    Paste,\n    Find,\n    Mute,\n    VolumeUp,\n    VolumeDown,\n    LockingCapsLock,\n    LockingNumLock,\n    LockingScrollLock,\n    NumpadComma,\n    KeypadEqualSign,\n    International1,\n    International2,\n    International3,\n    International4,\n    International5,\n    International6,\n    International7,\n    International8,\n    International9,\n    Lang1,\n    Lang2,\n    Lang3,\n    Lang4,\n    Lang5,\n    Lang6,\n    Lang7,\n    Lang8,\n    Lang9,\n    AlternateErase,\n    SysReq,\n    Cancel,\n    Clear,\n    Prior,\n    Return2,\n    Separator,\n    Out,\n    Oper,\n    ClearAgain,\n    CrSel,\n    ExSel,\n\n    Keypad00 = 0xb0,\n    Keypad000,\n    ThousandsSeparator,\n    DecimalSeparator,\n    CurrencyUnit,\n    CurrencySubUnit,\n    KeypadLeftParen,\n    KeypadRightParen,\n    KeypadLeftBrace,\n    KeypadRightBrace,\n    KeypadTab,\n    KeypadBackspace,\n    KeypadA,\n    KeypadB,\n    KeypadC,\n    KeypadD,\n    KeypadE,\n    KeypadF,\n    KeypadXor,\n    KeypadPower,\n    KeypadPercent,\n    KeypadLess,\n    KeypadGreater,\n    KeypadAmpersand,\n    KeypadDblAmpersand,\n    KeypadVerticalBar,\n    KeypadDblVerticalBar,\n    KeypadColon,\n    KeypadHash,\n    KeypadSpace,\n    KeypadAt,\n    KeypadExclamation,\n    KeypadMemStore,\n    KeypadMemRecall,\n    KeypadMemClear,\n    KeypadMemAdd,\n    KeypadMemSubtract,\n    KeypadMemMultiply,\n    KeypadMemDivide,\n    KeypadPlusMinus,\n    KeypadClear,\n    KeypadClearEntry,\n    KeypadBinary,\n    KeypadOctal,\n    KeypadDecimal,\n    KeypadHexadecimal,\n\n    ControlLeft = 0xe0,\n    ShiftLeft,\n    AltLeft,\n    MetaLeft,\n    ControlRight,\n    ShiftRight,\n    AltRight,\n    MetaRight,\n}\n\nexport class HidKeyboard {\n    /**\n     * A HID Keyboard Report Descriptor.\n     *\n     * It's compatible with the legacy boot protocol. (1 byte modifier, 1 byte reserved, 6 bytes key codes).\n     * Technically it doesn't need to be compatible with the legacy boot protocol, but it's the most common implementation.\n     */\n    static readonly DESCRIPTOR = new Uint8Array(\n        // prettier-ignore\n        [\n            0x05, 0x01, // Usage Page (Generic Desktop)\n            0x09, 0x06, // Usage (Keyboard)\n            0xa1, 0x01, // Collection (Application)\n            0x05, 0x07, //    Usage Page (Keyboard)\n            0x19, 0xe0, //    Usage Minimum (Keyboard Left Control)\n            0x29, 0xe7, //    Usage Maximum (Keyboard Right GUI)\n            0x15, 0x00, //    Logical Minimum (0)\n            0x25, 0x01, //    Logical Maximum (1)\n            0x75, 0x01, //    Report Size (1)\n            0x95, 0x08, //    Report Count (8)\n            0x81, 0x02, //    Input (Data, Variable, Absolute)\n\n            0x75, 0x08, //    Report Size (8)\n            0x95, 0x01, //    Report Count (1)\n            0x81, 0x01, //    Input (Constant)\n\n            0x05, 0x08, //    Usage Page (LEDs)\n            0x19, 0x01, //    Usage Minimum (Num Lock)\n            0x29, 0x05, //    Usage Maximum (Kana)\n            0x75, 0x01, //    Report Size (1)\n            0x95, 0x05, //    Report Count (5)\n            0x91, 0x02, //    Output (Data, Variable, Absolute)\n\n            0x75, 0x03, //    Report Size (3)\n            0x95, 0x01, //    Report Count (1)\n            0x91, 0x01, //    Output (Constant)\n\n            0x05, 0x07, //    Usage Page (Keyboard)\n            0x19, 0x00, //    Usage Minimum (Reserved (no event indicated))\n            0x29, 0xdd, //    Usage Maximum (Keyboard Application)\n            0x15, 0x00, //    Logical Minimum (0)\n            0x25, 0xdd, //    Logical Maximum (221)\n            0x75, 0x08, //    Report Size (8)\n            0x95, 0x06, //    Report Count (6)\n            0x81, 0x00, //    Input (Data, Array)\n            0xc0        // End Collection\n        ]\n    );\n\n    #modifiers = 0;\n    #keys: Set<HidKeyCode> = new Set();\n\n    down(key: HidKeyCode) {\n        if (key >= HidKeyCode.ControlLeft && key <= HidKeyCode.MetaRight) {\n            this.#modifiers |= 1 << (key - HidKeyCode.ControlLeft);\n        } else {\n            this.#keys.add(key);\n        }\n    }\n\n    up(key: HidKeyCode) {\n        if (key >= HidKeyCode.ControlLeft && key <= HidKeyCode.MetaRight) {\n            this.#modifiers &= ~(1 << (key - HidKeyCode.ControlLeft));\n        } else {\n            this.#keys.delete(key);\n        }\n    }\n\n    reset() {\n        this.#modifiers = 0;\n        this.#keys.clear();\n    }\n\n    serializeInputReport() {\n        const buffer = new Uint8Array(8);\n        buffer[0] = this.#modifiers;\n        let i = 2;\n        for (const key of this.#keys) {\n            buffer[i] = key;\n            i += 1;\n            if (i >= 8) {\n                break;\n            }\n        }\n        return buffer;\n    }\n}\n","export class HidMouse {\n    static readonly descriptor = new Uint8Array(\n        // prettier-ignore\n        [\n            0x05, 0x01,       // Usage Page (Generic Desktop)\n            0x09, 0x02,       // Usage (Mouse)\n            0xa1, 0x01,       // Collection (Application)\n            0x09, 0x01,       //     Usage (Pointer)\n            0xa1, 0x00,       //     Collection (Physical)\n            0x05, 0x09,       //         Usage Page (Button)\n            0x19, 0x01,       //         Usage Minimum (Button 1)\n            0x29, 0x05,       //         Usage Maximum (Button 5)\n            0x15, 0x00,       //         Logical Minimum (0)\n            0x25, 0x01,       //         Logical Maximum (1)\n            0x75, 0x01,       //         Report Size (1)\n            0x95, 0x05,       //         Report Count (5)\n            0x81, 0x02,       //         Input (Data, Variable, Absolute)\n\n            0x75, 0x03,       //         Report Size (3)\n            0x95, 0x01,       //         Report Count (1)\n            0x81, 0x01,       //         Input (Constant)\n\n            0x05, 0x01,       //         Usage Page (Generic Desktop)\n            0x09, 0x30,       //         Usage (X)\n            0x09, 0x31,       //         Usage (Y)\n            0x09, 0x38,       //         Usage (Wheel)\n            0x15, 0x81,       //         Logical Minimum (-127)\n            0x25, 0x7f,       //         Logical Maximum (127)\n            0x75, 0x08,       //         Report Size (8)\n            0x95, 0x03,       //         Report Count (3)\n            0x81, 0x06,       //         Input (Data, Variable, Relative)\n\n            0x05, 0x0C,       //         Usage Page (Consumer)\n            0x0A, 0x38, 0x02, //         Usage (AC Pan)\n            0x15, 0x81,       //         Logical Minimum (-127)\n            0x25, 0x7f,       //         Logical Maximum (127)\n            0x75, 0x08,       //         Report Size (8)\n            0x95, 0x01,       //         Report Count (1)\n            0x81, 0x06,       //         Input (Data, Variable, Relative)\n            0xc0,             //     End Collection\n            0xc0,             // End Collection\n        ]\n    );\n\n    static serializeInputReport(\n        movementX: number,\n        movementY: number,\n        buttons: number,\n        scrollX: number,\n        scrollY: number\n    ): Uint8Array {\n        return new Uint8Array([\n            buttons,\n            movementX,\n            movementY,\n            scrollY,\n            scrollX,\n        ]);\n    }\n}\n","export * from \"./audio.js\";\nexport * from \"./filter.js\";\nexport * from \"./hid.js\";\nexport * from \"./initialize.js\";\nexport * from \"./keyboard.js\";\nexport * from \"./mouse.js\";\nexport * from \"./type.js\";\n"],"names":["AoaRequestType","AoaAudioMode","HidKeyCode","aoaSetAudioMode","device","mode","controlTransferOut","recipient","requestType","request","SetAudioMode","value","index","ArrayBuffer","aoaHidRegister","accessoryId","reportDescriptorSize","RegisterHid","aoaHidSetReportDescriptor","reportDescriptor","SetHidReportDescriptor","aoaHidUnregister","UnregisterHid","aoaHidSendInputReport","event","SendHidEvent","AoaHidDevice","register","length","sendInputReport","unregister","aoaGetProtocol","result","controlTransferIn","GetProtocol","version","data","getUint16","aoaStartAccessory","Start","HidKeyboard","DESCRIPTOR","Uint8Array","modifiers","keys","Set","down","key","ControlLeft","MetaRight","add","up","delete","reset","clear","serializeInputReport","buffer","i","HidMouse","descriptor","movementX","movementY","buttons","scrollX","scrollY"],"sourceRoot":""}